<?xml version="1.0"?>
<!DOCTYPE ipe SYSTEM "ipe.dtd">
<ipe version="70206" creator="ipetoipe 7.2.7">
<info created="D:20100118121208" modified="D:20110920004305" title="CS101 Lecture 2" author="Otfried Cheong" numberpages="yes"/>
<bitmap id="1" width="151" height="154" length="1244" ColorSpace="DeviceRGB" Filter="FlateDecode" BitsPerComponent="8" encoding="base64">
eNrt3L1rYkscxvGDiI1FQHwhlYJap9HaW4nphCAIQfIHBLSIjQi6hd0tFIK1aVJFW+U2FtrZ
uoUIGlDBwkZ8ARXUO7th3WRf7vpyNY75PkzhWdjzO5lPZpw5y85yud/8rSiv23Y3qVary/fL
R64OIoh0I4gggkh1EEGkG0EEEcSTrJ5MJs1ms0qlMhqNwWBwOp2CKFf1SqWi1WrL5fJsNhN3
M5lMmUwGRLmqt1qtYrEoPiwWi0ajIYZkLpcDUcbqw+FQrVYriuLz+YQmiJJWF3bibmIkiq/I
XRCrZA/5b4J6vV6r1VaXsVjM7XYzEuWqnkgkLi8vV5fhcPjq6gpEuaqLO2g0GrGYGY/HpVJJ
p9Nls1kQpav++PhotVrFPtFisaTTaTb7vLGhG0EEEUSqgwgiiCCCCCKIIIIIIogggggiiCCC
CCLdCCKIIFIdRBDpRhBBBJHqIIJIN4IIIohUBxFEuhFEEEGkOogg0o0ggggi1UGUonq5XHY4
HGq1WqfThUKhyWQColzV+/3+2dlZIpEYj8fibna7PRqNgihX9UKhoNfrVwcQpVIpp9MJolzV
R6NRu91++Swo/X5/IBAAUdLqzWbT5/PZbLZOp7MLIqc/Hf5EKRGxkolEIgaDIRaLDQYDVqfS
VZ/P5x6Px+v19no9thiSVs/n80ajsV6vP39Lt9sFUa7q8XhceRuXywUib2zoRhBBBJHqIIII
IogggggiiCCCCCKIIIIIIogggkg3gvjLZzi9BiKIR4548nwggggiiO+CyOoURBBB/AiIyoa5
vr4G8agQX1w+ffqr0VBEE3/w+/bPcvks2vXXgHhUiOsJvnEUf2v50kA8JsQ1BL87gnj8iGK2
/ML0xQtEWRF/L/gKke9EEEHcP+Kfp1MQT2BhAyKIIB7JFgPE9fL09HRzcwOipIifP3++v78/
Pz8/DOLGb2yYTtfIw8PD7e3txcXFvhG3eHcK4ka5u7vbK+Jy83/FUNZAAXEfiH88HOn1l+NX
ptVW8fsUuv5RSx/kPKvjGYmr8biaTn9CXGtbwUg8TsRXr25AlBLx7XtUEOVDfLuMAfGo39is
t+t/BlEWxN13FiC+L+Ivh6Sybf+DCCKIIIII4ukhbre2AfF4EH/YaIAoHeJPjiDKhLj7VhHE
90X8X34QEEEEEUQQQTxaRNoJnJ5BA5EGIog4fmREQgghhBBCCCGEEEIIIYSQU83W51ntmHK5
7HA41Gq1TqcLhUKTyeSQ1ZPJpNlsVqlURqMxGAxOp1NJ+XY8z2qX9Pv9s7OzRCIxHo+r1ard
bo9GowerXqlUtFqt+C2azWaiuslkymQykiLueJ7VLikUCnq9frFYvFymUimn03mw6q1Wq1gs
ig/iARqNhhiSuVxO6ul062MfdsloNGq32y+fRU/6/f5AIHDgZxgOh2IyVxTF5/Otfp1A3CLN
ZlP0oc1m63Q6h68u7MR0Kkai+IoEcYuIlUwkEjEYDLFYbDAYHLJ0vV6v1WqrS/EAbrcbxE0z
n889Ho/X6+31eof/kcWC6vLycnUZDoevrq5A3DT5fF6s7cWIeP6Wbrd7sOpiCtVoNGIxI9bG
pVJJ7HGy2SyImyYej//wnyJdLtchH+Dx8dFqtYp9osViSafTvC4ghBBCCCGEEEIIkSj/Au4i
iA4=
</bitmap>
<bitmap id="2" width="411" height="81" length="1058" ColorSpace="DeviceRGB" Filter="FlateDecode" BitsPerComponent="8" encoding="base64">
eNrt28tx4kAURmFymZ1ZEgsrQpgkiGCi8GwchYJwPoyQbGiEMA+P722h75TKZVS2j/qhX92t
9m63WywWf19eDkf7cXc/TdPsMuDl5Z2V92penf9A80np/fpMU3D7b33/zPkFRNrjz6hn9Tzz
en4g0DxZeHl5n2aEtgOAKhFoAAQaAMwz0Mz9eXl5A7wCjZeXV6BpCF5e3nkGGgAEINAACDQA
mGegmfvz8vIGeAUaLy+vQNMQvLy88ww0AAhAoAEQaAAwxUAbYO7Py8tbp/dqXnkpwMvLO6FA
85aTl5dXoAFAVQg0AAINAOYZaOb+vLy8AV6BxsvLK9A0BC8v7zwDDQAuRdBdbDYbgQag2jRb
rVabju1lXl9fm47+JwUagAoD7ZY0G2TaPoX6IynQzP15eXm/CLTtbfSZJtB4eXmnEmjtx/Z8
m10CjZeXd+qBdinNTgLt8h+0hgYgBYEG4OkD7fqUU6ABmEKg3fRSIDXQrDnw8vIKNB2Al1eg
jb/lFGi8vLwCzRoagJ8MtLv/UyB1ygkAo/nzwP9y/t9Aaz4pR6TOOOOMM3edKTPtLs5nxIe/
bA2Nl5c33VsuprXfH772Y7OWG5NHoPHy8tYQaIcp5yDQ+kyrIdB+/fntcDgco8fVQOupJ9AA
4LERWvm9QAMw3UArEWgAJhdol3bYeinAy8s7Le8DuzUEGi8vb+Xewf6NB35doPHy8go0ABBo
ACDQAMwq0O59L2ANjZeXtx7vpf0bN+7cEGi8vLwVBtog0wQaLy/vFAPtO1vRrKEBeBoeCDQA
qJZ7A638+HNHmIiXl/dZvQKNl5dXoGkIXl5egaYheHl5IwMNACaKN78AAAAAgAnxtm7nsuu3
aOMHkeL37TJDe1rsSHNZ0Yvl9j2hpsOsReOGt3FRzzk3UmTbXsqNYwNk3FzDi4i7hl7Z+7o6
iWqMY56EaodVHdjanTK+rx+1KRV92sUibf13of25k8W383ludGcOlZARsHkDpdFGed4OP6js
nEdHSp5lPqSDh2d9eSPVZTXHVvlYbhRXkNf+7YW115PU7TNvufhJ9r6g623GnZY0/8qbdcQ/
Iw8FDu3OJ+UMrfOx3CgvILkDJAZa/KJSUnW3zrbrBdd00eMjb/L+Ab1eL3OG/jlj/s9nR6R4
2L7BpT7pzScfkhYa0gMtJc4yev3etpdlPzpiCvyxvNIVM2m0lHZnBz8sDytZy+VSoOUGWuz6
afoN3lXvPAItdfaRm2d5s60ErylnHYOz6A5wvpsgo+Dhc86cvp3Rl2sItIx1+JFAy34pkNUJ
Mmb8p2PCnH6XvIYWJj4mWvSAKXE/Tnx5B9s2cuZYVW3byAm08yFLxvvmjBoPf3QUVR1c3qQd
n1mrN8eOFb9gmNWdz3tzws4kAAAAAAAAYFb8A+AnZAM=
</bitmap>
<bitmap id="3" width="213" height="162" length="1529" ColorSpace="DeviceRGB" Filter="FlateDecode" BitsPerComponent="8" encoding="base64">
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
ERERERERERER0VfuXxMD1AE=
</bitmap>
<bitmap id="4" width="58" height="50" length="865" ColorSpace="DeviceRGB" Filter="FlateDecode" BitsPerComponent="8" ColorKey="fbfbfd" encoding="base64">
eNrtmE1LG0EYx+NrXBQtoXhQFJEYYnxpXEMrEQIJsgkSSihFog095OBFwZ5VqEe9ikggNyOi
HqyoiO03CEHEg4iICC099DNIa//JtNNhNptskgkmdB/+hNnMDPnx5HmZ2YeHnw+GqlzfTB8g
dlD5tFTV4t6qcCw3qHzUqvj3DdT/GfWpZCrQFuQFsrHvrw0PvxocdPfps9JRlecKGKD1qXUt
HX88TiVSEJZFX7z1+/0NGWtsbGxqapIkCZ9msxmPDdrmdDpLAdaJygGD7Wt9/XezGcxzc3Mr
+WxtbW0/Y263e2hoqGhgSpsXlQXGrl8Zzc/PnwUCjyZTyuVSQ+7MzGDqrrcX49XV1b29vVgs
JpwWj/geYFq0ad/W1f1obv6sKOAhOpdlFnU3HKZT9z095aPVQqW0NTU1nZ2d09PTRdC2trZ6
vd7igIujxQJCC6pCIwF7BwYGxNLmjgTiW3riyptldCVoURnE0ubNMsQtaAOBALJsRZ+VL251
0pJIqAraT5Lk8USJb08nJ2lCcbq1WiuB9osk6Y8E4d2hoF5WW1tLOm9/f3/eXgbURCKxvLws
pPMWcU4ALX4UwAUdh0ZGRkQdbPQbdaxO3xL3Et+2tbX5fL4SgbkAxph+Eq9CeCQrfV4fDloI
v8i7SPqccBZIJl/mQN3aen9/n+5liIeNjY3x8XGHw1G6h2kkcLQEmNLKsswV29PTyVTKlRV1
eztyd9fLloV4PA5Um80mnJYYR6soCp1CjhOSk5Pg+bnMd96dmdvbPxUsGo3SXeXwLTtmaUly
LS0twVeUFnZ09PriwvnvVLMbvrmx0UfQjo2NJZNJhD2iXSwta2pa5Is/Yywt7PAwdHk5jMH+
/tT1tZ2dAi1qwujoqMViKTEMcrcJLsvIjYxgq2vCwcGbx0fT1ZVDXROEVDD9dYzbQpxst9sB
HAwGs17ErFYrUBcXFzFuaZG7u0PIMLFXYLaU5V4MYEo7MTHBXW89Hg+ldblcQrwqkJabNWgN
2iehhXKsJMcwdZbRWTWtcGCW1tJsyVq7aPlSVzBy+6azbAUr/XyrVXjZ7tD+rD0rbUdHB/dm
KRQKUdqurq7Z2Vn27rC5uSmcVg2sRZu1HXC+FfvWTmd304rbHO88y/FG1JAhQ4YqWb8B0wZT
mQ==
</bitmap>
<bitmap id="5" width="411" height="81" length="1206" ColorSpace="DeviceRGB" Filter="FlateDecode" BitsPerComponent="8" encoding="base64">
eNrt3U1y4jAURWHWE4ZZC6MMeivsJJP0JKtgEb0f2uAEjM1vgt+T5e8U1RUoOhc/SceSMGS7
3S4Wi78vL4dbc3f7OJvNZpuBXLlyZ5V701fDJ2y+6eZef2TT4f7/9ftHhi8gMj3+EXVW55nX
+QdCc2aRK1duNTO0LQAUCaEBIDQAmKfQrP3lypUbkEtocuXKJTQNIVeu3HkKDQACIDQAhAYA
8xSatb9cuXIDcglNrly5hKYh5MqVO0+hAUAAhAaA0ABgikLrYe0vV67cMnNv+sqbAnLlyp2Q
0LzLKVeuXEIDgKIgNACEBgDzFJq1v1y5cgNyCU2uXLmEpiHkypVbsdAWD/L29mbJD+CJPEto
raNeX1/f9qwv8/Hx0f7d9vaZmgBAgUK7x2Y9p+1+W3sDgPKEtr6P1mljCy147f/n/b13s9eh
znIjc0cVWnO3ebxxV/VCGw6xlOFWfYdXZ7mJQrtksxOhTbwhrg+x4OFWcYdXZ7mElrv2SV8Z
VYM6oxCh3V5y1jLKfvk0qDMKF9pdbwpMf6A9/clQZxBa5Nr/ymTg7Pdkxkwe6ttjUWe5ExPa
mE4LGGjDIXbpi8oNNHWWS2gFNsT1acDNgTbeWKusw6uz3HShPfxJgep2da78KRk7POqMUcn9
LCehQZ2RK7TNN2c72EMMZ5i931zmI78faFM5UnX2yLQeefr3oXU305qfD/+2c7OGyFnZ2Hs7
pc0cat1DU2e5wUvO7vMPS86e0Fqn1SQ0m9XqTCwzFFpLNUK7PgdwOYE6y61YaN2fg4U2HmVe
8Fkf6oyihNalJqFtfSRHnTEPoV26wjb+TYGwyYMPTaszahXao1drTHftX9rX2tS6x6LOcrOE
dnaqljUr88WD6qzOhEZozx1uOp46yyW0qe/22MlRZwRDaAAI7VGhZb0vAIDQniu03sUbYUKz
5yBX7qxyA4TWcxqhyZUrd4pCS78UTQeQK5fQniI0AAjmB0IDgGJ5VGjdu+PdwoLkypVbay6h
yZUrl9A0hFy5cglNQ8iVKzdSaAAwUbzzCwAAAACYEJ+rZi27+oxO/CIy+N96mRF7etiRyd1C
L5brfwmVDkvtNG54G3fqnDOQItv2kjeODZAxuPovIu41tJFt3r4mUY1x9ElobL/Uga29j4zv
68fYlEKfdrHItPan0P68D4tv56E39o8cipAh2LyJ0tlGqbfD94qdc+pI8VnmSTp4etYeb2R0
t8yxJT/njc4ryGv/5oU1ryep22cOufhF9u5AV+uMkZa0/spbdcSfIw8HHNqdT44ztObnvNF9
AckdIFFo8ZtKSeVuMpuuF1zpTo+PHOTtCXq1WuZM/XPm/N/njsjgfvsGH/VJbz65k7TRkC60
FJ1l9Ppd2i4s+9QRc8Bf2yv7w0yaLaWN7OCT5WEna7lcElqu0GL3T9MH+L688xBa6uoj12d5
q62EXEvOMiZn0R1geDVBxoGHrzlz+nZGXy5BaBn78GeElv2mQFYnyFjxn84Jc/pd8h5aWPDR
aNETpsTrceKPt3fZRs4aq6jLNnKENpyyZLzfnFHx8FNHp9TBx5t0xWfW7s2xY8VvGGZ152Fv
TrgyCQAAAAAAAJgV/wHxhpW+
</bitmap>
<bitmap id="6" width="796" height="791" length="27740" ColorSpace="DeviceRGB" Filter="FlateDecode" BitsPerComponent="8" encoding="base64">
eNrs3Qmcj3XiB3CUmAnjbNsOunUpKUetDGLLqlRCStKxORKStCUzqo3aQimUbp2626Rti5Ra
OULuDsy4jZjLzJjh93v+j/mVrf6S2owZvT+v739f/rvMeD09n/m8m3nmN0EgIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIi8uuzZfPmvIwMx3Ecx3GKw9mcmRmNRvmkJGbmk08/0fq8hxObO47j
OI6zx8+zHTpmr1nLJyUx7w26IymhWv9S+zqO4ziOs8fPkFpHbkxJ4ZOS9SW/mU8+HYLqkaZn
3Vq+gnvYcRzHcYrDSa5c/Z99+n4w5B6yKinJy8h8ovX5SQnVCkFV1j3sOI7jOMXh3Fx6v4GV
qgyuefiyKR/jSgkxVcbDic3duo7jOI5TDE9SQrUlkz/EFaZyHMdxHIepmMpxHMdxHKYSpnIc
x3EcphKmchzHcRyHqZjKcRzHcRymYirHcRzHcZhKfnNTJSdUG9W4SRG/Jv9DjRPvq9dg6KkN
RzVp6icUhGd0YrPh9RvdW6/+iEaNw1+7IOEJ743wDgnvk/BuKeJ3/WCjM5J/7ucO7JHiPHD6
n8ILEt4qiqM4O/noGhYnPEVfnGJ79mBxhtc99W/7lGeq34+pRjVOTE9NLeKfHbl+xYqpH344
/eOPM9et85M0w7Ppm2/mTJ/+8cSJSxYtCn/tgoQnvDfCOyS8T8K7pYjf9Zq5c8NeFMPiLF24
MLwg4a2iOIqzk4+uYXHCU/TFKbZnDxZn0fi3d/6D4ZhqLzNV+BvC31bEf7GsrKyZM2fOnj07
Pz/fP6YwW7duXbhw4bRp01auXBn+2gUJE94b4R0S3ifh3VLE73pjSkrxLE54e4QXJLxVFEdx
dvLRdXZhir44xTZ7sDihl5iKqZjKNDAVUykOUzEVUwlTmQamYirFYSpXg6mEqUyDC8JUTKU4
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
dva2L0SG2Iu8xlRMZRqYiqmYiqn2rkSj+Zs2bVq3btPGjTnRaG5BeqTkmypzWNwTPcomJpap
W7fMPvuU2m+//U455ZTtj5Sff/75V1555Y03dpo584T582vfffel/6OpBgy4ZvLkBgsWHPvi
i+f279+/X79+vXv37lWYnj17nnvuuc2aNWva9IimTffr3XvfNWvimIqpTANTuSBMxVR7fwrS
oyXfVBvvjUv6y77bXzwhLi6uadOm278vL/Y66snJV27YcEBubuUHHrj4fzRV+Ka++urI8E1N
mNB4+8/7i72uwtChQ8N3F77To48+et999w2Zl5LCVExlGphKcZiKqZhqD5tqxOmNlyxcuPKn
s+bLaXkvNt1uqrJly1avXv2QQw5p3rz5X/7ylw4dOoTCueaaa3r27Nm/f9dXX202YcKfCk/j
UFZ9+/b4FZp69dXm4R8Pz5tvNhkx4uLYS4AmJSXdcccdoazuv//+O++8M/x/ExMTy5Ur931T
bX3kDxnv919ZArN8+fI5c+aE07Bo0aLw1ytl5crU1NTww+CMGTOWLFniasQSjkJ4QcJbJbw4
robi7DBhX2YWRnGKQ3E+ffmVgZWqMtXvx1T3ndpg6uTJM386cz8Znzn2jO2mio+PP+aYY048
8cSWLVu2bt366quvvu6663oW/oS+Xr163nRTt6SkqxYuPDo3t3Ioov79u/1SUw0f3n7VqoNX
rz5o1KiLbrqpa0xlsR9V069fv2HDhj344IPPPffcK6+80r59+/Av831TFYyusfKNHjNLZqZP
nx5OQ1j8mfJdphXGNfnRTRL+p0uhOD+V8FIoTvEpzoRHxgyoUJmpfj+mGla/UfiveQt/Ol/N
mpj9bOPtpipfvnzNmjWPOOKI+vXrn3766SGrLrrooiuuuKLndz/4uF+/7pMnN/jqqyMnTGg8
cuSFd9996S5+tio5+cphw9o988zZc+ce99lnJ37/oaxrr722bdu27dq1C/3Wp0+f22+/fciQ
IS1atAj/Mt831ZaHD1j3du+FJTALFiyIESL8N6nw1wul8JpML8y8efNcjVhmz54d2wU3ieL8
VMK+KE7xKc6kp8feVrEKU/1+TDW6SbPMtLT8neSbr7a+2nK7qUqXLl22bNn99tsv9pqcFSpU
qFix4plnntm1a9fvvmVv2xPmIZBCU61efXCoo4EDr9oVU736avNVqw7+/PPjhg7tEP6RG274
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
Rp6Oi53U+8v/qW6ZWrVKx07h29ixqcqVK1ezZs3Y+6pTp87UqVNNA1OZBlEcpmIq2QtMlZKS
EvIm1E6Zwuyzzz777rtvxYoVmzdvft5558VMdcYZZ1SoUGG/7xKCKSGudPJ5FSJjDtz6yB8K
Rtf46q5qtaqWCd9I7I+XLVs2/G2HHXZYaKobbrhhSGHOPffcuMLsv//+8fHx295IQsLkyZNN
A1OZBlEcpmIq2WtMFWrqwAMPDBV0wgknNGjQ4Mwzz+zcuXMIquuuuy40VUijtm3bXlSYc845
p3r16gmVKgy68cpg1Uc5X/1r8QePvf/c4IP+UC0E1fHHH9+wYcOWLVtecMEFHTt27NGjR69e
vfr163fTTTf17ds39uu77rrr5ptvrly5MlMxlWlgKsVhKqaSvc9UIahCEZ1++ulnn332eeed
17179+t3lNBXBx98cMihQYMGxVof3uFvvPHGH//4x3333TcEVatWrS677LIYxranT58+ycnJ
I0aMGDNmzJtvvvn4448fcMABTMVUpoGpFIepmEr2MlOVLl26cuXKNWrUOPTQQ4866qjatWvX
r1+/4Y5yyimnVKxYcYemCmF2yCGHHH300SeddFKDBg2+/6caNWrUtGnTkFuh1jp27NimTZv9
99+fqZjKNDCV4jAVU8leZqofPU8VZr+fTuxRqP9vqh89T/WjlC9f3vNUTOVqMJXiMBVTyd5q
qjVr1nTo0CHxF6Z169ZPPvnkdlO98847F1544a94I+GHC9PAVKZBFIepmEr2AlP96PWpdjGp
qakZhe8rZqowS5Ys+RVvxOtTMZVpcDUUh6mYSvYOU/3vrQ/v8LD1psE0MBVTKQ5TMZUwFVOZ
BqZiKsVhKsVhKqZiKtPAVKZBcZhKcZhKmMo0MJVpUBzFYSqmEqZiKtPAVEylOEzFVEy1N5nq
/rqnLhr/dvjPtCjPvLffmTDm0Xcff3zxv98v4nddPM9XEydNGjt2/OiHP33llfDXLkh4wnsj
vEPC+yS8W1yN2Jn28qvhBQlvFcVRnJ18dA2LEx7FKQ7FmXL/iNsqVGaq34+p/rZPuaSEquE/
1qI8AxOqDahQOTxF/H6L87mt8IIMrFjFpdh+YjfJQJdi+01SqWp4QW5THMXZhY+uilMcilMI
qrJM9fsxleM4juM4e+QwFVM5juM4jsNUTOU4juM4DlMJUzmO4zgOUwlTOY7jOI7DVEzlOI7j
OA5TMZXjOI7jOEwlvyL52Zv+r707j4uq+v8HTotZpJKGmqSMa4qCmjsYjCCCYKaJohIgprKa
G7grWyJugKWoqSyi5paS5oYKDIuSIKJsIuIwIyIwKLPPwMC953sBy+xXn8+fv49zXs/HefRH
/cXpvs99nXvPfc/55Su5WBXZd8C6d97H1YuBgYGBgfG/MDZ27LRnglX8tOnPCu4hrrwRWJZV
1NQ0iEQXVqza3KUbrmEMDAwMDIz/hRHRu29ldrZULG5ubERcebNkxfwQbTEykjcAAwMDAwMD
4//72DfRRlb1FPnkTdQgElVmZeNXnzAwMDAwMP4XhjjndzyhAgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALowWqIW
N0mF926V3MkqfSJTSwhREcLSOAkV925l5QoEmYJXbuYWFD1tLK8nah1NE8IyRCUhdSWyyntZ
mRl/mY/bAkHevfJqobylRkNaWIoLRyflrhlF7WOucO7mPOQKp54QNaWrxz8UjiAzJ+N2Rc69
qlqFlpsWmqpHw62g0upycX522e8ZWX9WT0bWrYLyPKGq7JmmhaGkRtRE8qDxaVHOzdcujb+j
cGZAj6nFbFnUs9SwmUO+5Zv6/Jj1IJmQB3StgX9OwtqZQ0zHGhmZGL0ycNy0OfvEgRdJmYSq
wKBmS84xv3hmbHE27WX8x2R0MzIabmRkOW3V4ZAc5XEhkekoLpz6LO6ayT+2iSscB4uVXOFc
bCscgsJp81Evi24j1wz7au/xfHEZN1vUpExCKgkpyTwUtHMyz9uim6nxRy+Lp2fvQU4rv/i+
eGmSUNlIR3Sof8Cc9608MNtiQC+jf0fjzICe3ji5NVHXUCRJW3fv6FJ+T9fhRh7bBcWnCSmm
KFO9moTC40sczcyGG/MG9uG1MunOM/5w2Ghbh7DchfG1OaImLkJQUPEMaVayqmp5TkLVnhnJ
qyf36d+/qwnPtHVG+vF6mPOMP5/qHe1/rvKH29JqLaNpu4tQqOnJFWXOOsEe30mfuI7n+XKF
w21GSmibBaWQvR9WdXmpXf9+n31o3M+kvXJa9R0ysb91iNX8Q2fuVT0i5DklE8I2a6S5KknK
rzu814zrM29wj4H9TE14fUw//bgvz2TwZO8RS1O9YvKr5M1yHQXvAp6XM5dXiRMWTBxlxvub
Pia87p16dzPs2MHwnfd79nVYyd/5YPlJMTIVvLGaCeG2jxce3tq+YojJNz0/6fqOs5GRRxhd
meq1SVhiNtQl/KbbPtGNOyJOZUost8M6FeQ0cKCjibnHshP39z0kOXq/326Ws09OK/O3J63x
mmL8+Uxrj+/OlQSnigofiSoflVaeCBLumbF2rnvv/t6WLlGJVS9SCXlBZf2Und9xKaD/VucB
n3aaZsLzDaMzU9WXMhcWVSZ6mbvs6j3zwJmUtsppJ64SVTdU1cpVTc06aoJ3s0aeHTX3vA/v
26mOfcz9rF13Hr99P+3R/dLsXcXJ30UsmTfMyNbedsX2XFVcBZHr/SLL6IiqvkVRV/VELHpd
5Z1rlXEeWWHO4wc6fdBl9vR1Rw5Kdb8pm5toPk4Ab+pOimWa1Iz2uUb5u0wWn3NpnZtxF4cO
Rh8aOHUy8gilK1PpSMt9ojtadGPTvK5dZ/T8zD1W5JtMHrS95mNLzzHnvdPDZnzWc2SPT+0X
HM6NKCRpNXo/JTJWdExxO+xQoNcEI8tptv7hOUouTLa+5tOpGUE488v8MNc5xoYzh/M37hFK
LjBEQlsFNWu5qbh7LDjJrcfqL0y6f+DUk+cbSmWmYmuLGk+4lR/4Zqh7/KfuyVnF1F0Lfyse
nar+6nr7I9M7zp3k0GPMZhvvo6nPZI90MtW/1RSNuHyta6kpUJ1aUrLz60kj5hv18nGLOMeV
TxZtZ05AP24IyudPL20r3O8RvWwKnz/Umj9iHN9mzAS7AR1nmhl5bKMqUzVrWOFFJtUvK9Z7
0JAFwyasSiyovyohL9r/eFU5kVx9cGXHSssBnqPMvXZl+V8kv5bp/W2ymWhrWhTCp+UluYK8
e/llQnlLlbrtODrbRBrOkbo9CasXO3eZ+PV4n9DMZwfE5ImWrkDF5MczqcGx62daWQ8eOmR4
//emj+L5bqMyU0kf3hKsGHzKb7jl8guj1+ferpBTvLJyZXBTI78Y9ZWTj3H/xZ6hCxOKt6bW
VKm5VaaZ+beaopGQkIzK3D1Rk4euGW0x0+fYtC2lsWkSLo5Lafs2CvRjKyWtrohbmL1mmK9N
DwMDgw+7Gw+b8ZWFs8swQ5fRRh47qMpUOjVbdIo5MTt9m+fHIzea2kVdq5aWvvp6q467SVbm
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
</bitmap>
<ipestyle name="presentation">
<symbol name="arrow/arc(spx)">
<path stroke="sym-stroke" fill="sym-stroke" pen="sym-pen">
0 0 m
-1 0.333 l
-1 -0.333 l
h
</path>
</symbol>
<symbol name="arrow/farc(spx)">
<path stroke="sym-stroke" fill="white" pen="sym-pen">
0 0 m
-1 0.333 l
-1 -0.333 l
h
</path>
</symbol>
<symbol name="mark/circle(sx)" transformations="translations">
<path fill="sym-stroke">
0.6 0 0 0.6 0 0 e
0.4 0 0 0.4 0 0 e
</path>
</symbol>
<symbol name="mark/disk(sx)" transformations="translations">
<path fill="sym-stroke">
0.6 0 0 0.6 0 0 e
</path>
</symbol>
<symbol name="mark/fdisk(sfx)" transformations="translations">
<group>
<path fill="sym-stroke" fillrule="eofill">
0.6 0 0 0.6 0 0 e
0.4 0 0 0.4 0 0 e
</path>
<path fill="sym-fill">
0.4 0 0 0.4 0 0 e
</path>
</group>
</symbol>
<symbol name="mark/box(sx)" transformations="translations">
<path fill="sym-stroke" fillrule="eofill">
-0.6 -0.6 m
0.6 -0.6 l
0.6 0.6 l
-0.6 0.6 l
h
-0.4 -0.4 m
0.4 -0.4 l
0.4 0.4 l
-0.4 0.4 l
h
</path>
</symbol>
<symbol name="mark/square(sx)" transformations="translations">
<path fill="sym-stroke">
-0.6 -0.6 m
0.6 -0.6 l
0.6 0.6 l
-0.6 0.6 l
h
</path>
</symbol>
<symbol name="mark/fsquare(sfx)" transformations="translations">
<group>
<path fill="sym-stroke" fillrule="eofill">
-0.6 -0.6 m
0.6 -0.6 l
0.6 0.6 l
-0.6 0.6 l
h
-0.4 -0.4 m
0.4 -0.4 l
0.4 0.4 l
-0.4 0.4 l
h
</path>
<path fill="sym-fill">
-0.4 -0.4 m
0.4 -0.4 l
0.4 0.4 l
-0.4 0.4 l
h
</path>
</group>
</symbol>
<symbol name="mark/cross(sx)" transformations="translations">
<group>
<path fill="sym-stroke">
-0.43 -0.57 m
0.57 0.43 l
0.43 0.57 l
-0.57 -0.43 l
h
</path>
<path fill="sym-stroke">
-0.43 0.57 m
0.57 -0.43 l
0.43 -0.57 l
-0.57 0.43 l
h
</path>
</group>
</symbol>
<symbol name="arrow/fnormal(spx)">
<path stroke="sym-stroke" fill="white" pen="sym-pen">
0 0 m
-1 0.333 l
-1 -0.333 l
h
</path>
</symbol>
<symbol name="arrow/pointed(spx)">
<path stroke="sym-stroke" fill="sym-stroke" pen="sym-pen">
0 0 m
-1 0.333 l
-0.8 0 l
-1 -0.333 l
h
</path>
</symbol>
<symbol name="arrow/fpointed(spx)">
<path stroke="sym-stroke" fill="white" pen="sym-pen">
0 0 m
-1 0.333 l
-0.8 0 l
-1 -0.333 l
h
</path>
</symbol>
<symbol name="arrow/linear(spx)">
<path stroke="sym-stroke" pen="sym-pen">
-1 0.333 m
0 0 l
-1 -0.333 l
</path>
</symbol>
<symbol name="arrow/fdouble(spx)">
<path stroke="sym-stroke" fill="white" pen="sym-pen">
0 0 m
-1 0.333 l
-1 -0.333 l
h
-1 0 m
-2 0.333 l
-2 -0.333 l
h
</path>
</symbol>
<symbol name="arrow/double(spx)">
<path stroke="sym-stroke" fill="sym-stroke" pen="sym-pen">
0 0 m
-1 0.333 l
-1 -0.333 l
h
-1 0 m
-2 0.333 l
-2 -0.333 l
h
</path>
</symbol>
<pen name="normal" value="1.2"/>
<pen name="heavier" value="2.4"/>
<pen name="fat" value="3.6"/>
<pen name="ultrafat" value="6"/>
<symbolsize name="normal" value="9"/>
<symbolsize name="large" value="15"/>
<symbolsize name="small" value="6"/>
<symbolsize name="tiny" value="3.3"/>
<arrowsize name="normal" value="15"/>
<arrowsize name="large" value="20"/>
<arrowsize name="small" value="10"/>
<arrowsize name="tiny" value="6"/>
<color name="red" value="1 0 0"/>
<color name="green" value="0 1 0"/>
<color name="blue" value="0 0 1"/>
<color name="yellow" value="1 1 0"/>
<color name="orange" value="1 0.647 0"/>
<color name="gold" value="1 0.843 0"/>
<color name="purple" value="0.627 0.125 0.941"/>
<color name="gray" value="0.745"/>
<color name="brown" value="0.647 0.165 0.165"/>
<color name="navy" value="0 0 0.502"/>
<color name="pink" value="1 0.753 0.796"/>
<color name="seagreen" value="0.18 0.545 0.341"/>
<color name="turquoise" value="0.251 0.878 0.816"/>
<color name="violet" value="0.933 0.51 0.933"/>
<color name="darkblue" value="0 0 0.545"/>
<color name="darkcyan" value="0 0.545 0.545"/>
<color name="darkgray" value="0.663"/>
<color name="darkgreen" value="0 0.392 0"/>
<color name="darkmagenta" value="0.545 0 0.545"/>
<color name="darkorange" value="1 0.549 0"/>
<color name="darkred" value="0.545 0 0"/>
<color name="lightblue" value="0.678 0.847 0.902"/>
<color name="lightcyan" value="0.878 1 1"/>
<color name="lightgray" value="0.827"/>
<color name="lightgreen" value="0.565 0.933 0.565"/>
<color name="lightyellow" value="1 1 0.878"/>
<color name="title" value="0.4 0 0.4"/>
<dashstyle name="dashed" value="[4] 0"/>
<dashstyle name="dotted" value="[1 3] 0"/>
<dashstyle name="dash dotted" value="[4 2 1 2] 0"/>
<dashstyle name="dash dot dotted" value="[4 2 1 2 1 2] 0"/>
<textsize name="normal" value="\normalsize"/>
<textsize name="large" value="\large"/>
<textsize name="small" value="\normalsize"/>
<textsize name="huge" value="\LARGE"/>
<textstretch name="normal" value="2.8"/>
<textstretch name="large" value="2.8"/>
<textstretch name="small" value="2.4"/>
<textstretch name="huge" value="2.8"/>
<textstyle name="normal" begin="\begin{flushleft}" end="\end{flushleft}"/>
<textstyle name="center" begin="\begin{center}" end="\end{center}"/>
<textstyle name="itemize" begin="\begin{flushleft}\begin{itemize}" end="\end{itemize}\end{flushleft}"/>
<textstyle name="item" begin="\begin{flushleft}\begin{itemize}\item{}" end="\end{itemize}\end{flushleft}"/>
<gridsize name="16 pts (~6 mm)" value="16"/>
<gridsize name="32 pts (~12 mm)" value="32"/>
<gridsize name="10 pts (~3.5 mm)" value="10"/>
<gridsize name="20 pts (~7 mm)" value="20"/>
<gridsize name="14 pts (~5 mm)" value="14"/>
<gridsize name="28 pts (~10 mm)" value="28"/>
<gridsize name="56 pts (~20 mm)" value="56"/>
<anglesize name="90 deg" value="90"/>
<anglesize name="60 deg" value="60"/>
<anglesize name="45 deg" value="45"/>
<anglesize name="30 deg" value="30"/>
<anglesize name="22.5 deg" value="22.5"/>
<preamble>
\renewcommand\rmdefault{cmss}
\makeatletter
\leftmargini 1.5em
\leftmargin \leftmargini
\leftmarginii  1.2em
\leftmarginiii 1em
\def\@listI{\leftmargin\leftmargini
            \parsep \z@
	    \partopsep 3pt
	    \topsep \z@
            \itemsep \z@}
\@listI
\def\@listii {\leftmargin\leftmarginii
              \labelwidth\leftmarginii
              \advance\labelwidth-\labelsep
              \topsep    \z@
              \parsep    \z@
              \itemsep   \parsep}
\def\@listiii{\leftmargin\leftmarginiii
              \labelwidth\leftmarginiii
              \advance\labelwidth-\labelsep
              \topsep    \z@
              \parsep    \z@
              \partopsep \z@
              \itemsep   \topsep}
\makeatother
</preamble>
<layout paper="800 600" origin="32 0" frame="736 528" skip="32" crop="no"/>
<titlestyle pos="368 554" size="large" color="title"  halign="center" valign="baseline"/>
<tiling name="falling" angle="-60" step="12" width="3"/>
<tiling name="rising" angle="30" step="12" width="3"/>
</ipestyle>
<ipestyle name="kaisttheme">
<symbol name="Background">
<group>
<image matrix="1 0 0 1 -162.234 308.933" rect="339.004 239.003 396.996 288.997" bitmap="4"/>
<group matrix="0.343668 0 0 0.343668 -51.9093 459.634">
<path fill="0.563 0.727 0.855" fillrule="wind">
76.697 277.771 m
120.493 269.94
192.854 264.827
274.709 264.827 c
356.564 264.827
428.927 269.94
472.718 277.771 c
428.927 285.601
356.564 290.72
274.709 290.72 c
192.854 290.72
120.493 285.601
76.697 277.771 c
</path>
<path fill="0.065 0.155 0.563" fillrule="wind">
275.279 299.355 m
294.577 299.355 l
294.577 373.497 l
275.279 373.497 l
275.279 299.355 l
h
</path>
<path fill="0.065 0.155 0.563" fillrule="wind">
418.065 373.465 m
361.604 373.465 l
361.669 357.398 l
380.069 357.398 l
380.069 299.214 l
399.603 299.279 l
399.603 357.398 l
418.065 357.398 l
418.065 373.465 l
h
</path>
<path fill="0.065 0.155 0.563" fillrule="wind">
249.098 374.512 m
241.957 374.512 l
229.799 374.512 l
222.663 374.512 l
200.923 313.64 l
182.964 337.545 l
209.964 373.497 l
190.668 373.497 l
169.085 344.764 l
169.085 373.497 l
149.792 373.497 l
149.792 299.355 l
169.085 299.355 l
169.085 330.332 l
192.384 299.326 l
195.813 299.326 l
211.677 299.326 l
215.107 299.326 l
235.337 355.983 l
247.498 315.289 l
229.329 315.289 l
229.329 299.226 l
259.475 299.226 l
259.475 299.326 l
271.567 299.326 l
249.098 374.512 l
h
</path>
<path fill="0.065 0.155 0.563" fillrule="wind">
341.955 345.908 m
341.927 345.95 l
319.143 345.95 l
319.143 357.493 l
357.066 357.493 l
357.066 373.56 l
323.335 373.56 l
323.318 373.532 l
311.282 373.532
301.522 363.769
301.522 351.728 c
301.522 339.879
310.971 330.261
322.742 329.946 c
322.76 329.887 l
347.43 329.887 l
347.43 315.289 l
303.776 315.289 l
303.776 299.226 l
342.373 299.226 l
342.399 299.261 l
354.979 299.635
365.065 309.921
365.065 322.573 c
365.065 335.392
354.739 345.781
341.955 345.908 c
</path>
</group>
<text transformations="translations" pos="100 588" stroke="kaist-dark-blue" type="label" valign="top">
CS101</text>
<path stroke="kaist-dark-blue" pen="fat">
0 536 m
736 536 l
</path>
</group>
</symbol>
<color name="kaist-dark-blue" value="0.065 0.155 0.563"/>
<color name="dred" value="0.7 0 0"/>
<layout paper="800 600" origin="32 0" frame="736 528" skip="32" crop="no"/>
<titlestyle pos="736 554" size="large" color="title"  halign="right" valign="baseline"/>
</ipestyle>
<ipestyle name="cs101style">
<preamble>
\newcommand{\dred}[1]{\textcolor{dred}{#1}}
\usepackage{fancyvrb}
\DefineShortVerb[formatcom=\color{darkred}]{\|}
\CustomVerbatimEnvironment{V}{Verbatim}{formatcom=\color{black},commandchars=\\\@\$}
\def\r{$\rightarrow$}
</preamble>
</ipestyle>
<page>
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<layer name="delta"/>
<view layers="alpha" active="beta"/>
<text layer="alpha" matrix="1 0 0 1 0 -24.8338" pin="h" transformations="translations" pos="0 471.203" stroke="darkblue" type="minipage" width="736" valign="top">\LARGE

\begin{center}
Introduction to Programming\\
CS101
\end{center}

\medskip

\Large
\begin{center}
Fall 2011
\end{center}

\medskip

\begin{center}
Lecture \#2
\end{center}
</text>
<text layer="beta" matrix="1 0 0 1 0 15.3324" pin="h" transformations="translations" pos="0 280.51" stroke="darkblue" type="minipage" width="736" valign="top">Each section has one 3-hour lab per week.  This is \dred{the most important part of the course}!</text>
<text layer="gamma" matrix="1 0 0 1 0 89.9456" pin="h" transformations="translations" pos="0 123.292" stroke="darkblue" type="minipage" width="736" valign="top">Four sections together have a lecture once a week:
\begin{itemize}
\item Sections A, B, C, D: Mondays by YoonJoon Lee;
\item Sections E, F, G, H: Wednesdays by In-Young Ko;
\item Sections I, J, K, L: Fridays by Sukyoung Ryu.
\end{itemize}
</text>
<text layer="delta" matrix="1 0 0 1 0.00000526 -32.075" pin="h" transformations="translations" pos="0 95.7597" stroke="darkblue" type="minipage" width="736" valign="top">You must regularly check the course announcements on \dred{http://cs101.kaist.ac.kr}</text>
</page>
<page title="Honesty policy" section="">
<layer name="alpha"/>
<layer name="beta"/>
<view layers="alpha" active="alpha"/>
<text layer="alpha" matrix="1 0 0 1 0 323.949" pin="h" transformations="translations" pos="0 123.35" stroke="darkblue" type="minipage" width="736" valign="top">\large

\begin{center}
\dred{Cheating is strongly forbidden.}
\end{center}

\medskip

\begin{center}
\dred{Cheating on homework or exams will give an F.}
\end{center}
</text>
</page>
<page title="Conditionals" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<layer name="delta"/>
<layer name="epsilon"/>
<layer name="zeta"/>
<layer name="eta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="alpha beta gamma" active="gamma"/>
<view layers="alpha beta gamma delta" active="delta"/>
<view layers="alpha beta gamma delta epsilon" active="epsilon"/>
<view layers="alpha beta gamma delta epsilon zeta" active="zeta"/>
<view layers="alpha beta gamma delta epsilon zeta eta" active="eta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">So far, our programs performed exactly the same steps every time the program is run.</text>
<text layer="beta" pin="h" transformations="translations" pos="0 437.729" stroke="darkblue" type="minipage" width="736" valign="top">Often, what the robot does must depend on the environment:

\begin{V}
\dred@if$ \textit@it rains$:
  listen_to_cs101_lecture()
\dred@else$:
  eat_strawberries_in_the_sun()
\end{V}
</text>
<text layer="gamma" matrix="1 0 0 1 29.5288 49.6335" transformations="translations" pos="548.628 308.482" stroke="darkred" type="label" valign="baseline">condition</text>
<path stroke="darkred" arrow="normal/normal">
568.733 366.283 m
479.518 368.168
423.602 392.67
279.099 391.414
211.246 383.246 s
</path>
<text layer="delta" matrix="1 0 0 1 148.901 0.628272" transformations="translations" pos="269.047 219.895" stroke="darkred" type="label" valign="baseline">if condition is true, do this</text>
<path stroke="darkred" arrow="normal/normal">
579.414 245.026 m
566.848 304.712
542.974 337.382
477.005 354.974
406.01 351.204 s
</path>
<text layer="epsilon" matrix="1 0 0 1 -275.183 -14.4503" transformations="translations" pos="313.654 161.466" stroke="darkred" type="label" valign="baseline">if condition is false, do that</text>
<path stroke="darkred" arrow="normal/normal">
366.429 157.696 m
397.215 187.225
365.801 225.55
267.162 261.361 s
</path>
<text layer="zeta" transformations="translations" pos="29.0471 87.3298" stroke="darkred" type="label" valign="baseline">Note the indentation!</text>
<path stroke="darkred" arrow="normal/normal">
21.5079 99.267 m
-6.13613 117.487
3.28796 209.215
8.31414 287.12 s
</path>
<text layer="eta" pin="h" transformations="translations" pos="0 35.9594" stroke="darkblue" type="minipage" width="736" valign="top">A \dred{condition} is something that is either |True| or |False|.</text>
</page>
<page title="Silly examples" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="alpha beta gamma" active="gamma"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">\begin{V}
if \dred@True$:
  print &quot;CS101 is my favorite course&quot;
\end{V}
</text>
<text layer="beta" pin="h" transformations="translations" pos="0 430.911" stroke="darkblue" type="minipage" width="736" valign="top">\begin{V}
if \dred@False$:
  print &quot;Every CS101 student will receive an A+&quot;
\end{V}
</text>
<text layer="gamma" pin="h" transformations="translations" pos="0 333.822" stroke="darkblue" type="minipage" width="736" valign="top">\begin{V}
if \dred@3 &lt; 5$:
  print &quot;3 is less than 5&quot;
else:
  print &quot;3 is larger than 5&quot;
\end{V}
</text>
</page>
<page title="Sensing beepers" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<layer name="delta"/>
<layer name="epsilon"/>
<layer name="zeta"/>
<view layers="alpha gamma" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="alpha beta delta" active="delta"/>
<view layers="alpha beta delta epsilon" active="epsilon"/>
<view layers="alpha beta delta epsilon zeta" active="zeta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">We want the robot to make 9 steps and pick up all beepers on the way.</text>
<image layer="gamma" matrix="1.7592 0 0 1.7592 -279.386 -75.8432" rect="213.894 233.629 522.106 294.371" bitmap="5"/>
<image layer="beta" matrix="1.76109 0 0 1.76109 -279.79 -76.3992" rect="213.894 233.629 522.106 294.371" bitmap="2"/>
<text layer="delta" matrix="1 0 0 1 0 -128.168" pin="h" transformations="translations" pos="0 437.729" stroke="darkblue" type="minipage" width="736" valign="top">|hubo.pick_beeper()| causes an error if there is no beeper.</text>
<text layer="epsilon" pin="h" transformations="translations" pos="0 251.992" stroke="darkblue" type="minipage" width="736" valign="top">Repeat the following 9 times:
\begin{itemize}
\item Take a step forward.
\item Check if there is a beeper.
\item If yes, pick it up.
\end{itemize}</text>
<text layer="zeta" transformations="translations" pos="368 256" stroke="darkblue" type="minipage" width="368" valign="top">\begin{V}
def move_and_pick():
  hubo.move()
  if hubo.on_beeper():
    hubo.pick_beeper()

for i in range(9):
  move_and_pick()
\end{V}</text>
</page>
<page title="not true is false">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<layer name="delta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="alpha beta gamma" active="gamma"/>
<view layers="alpha beta gamma delta" active="delta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">Let&apos;s do the opposite: we want to drop a beeper, but only if there is \dred{no} beeper at the current location.</text>
<text layer="beta" pin="h" transformations="translations" pos="0 437.729" stroke="darkblue" type="minipage" width="736" valign="top">\begin{V}
if \dred@not$ hubo.on_beeper():
  hubo.drop_beeper()
\end{V}</text>
<text layer="gamma" pin="h" transformations="translations" pos="0 338.316" stroke="darkblue" type="minipage" width="736" valign="top">The keyword |not| inverts the sense of the condition: |not| true is false, and |not| false is true.</text>
<text layer="delta" pin="h" transformations="translations" pos="0 249.983" stroke="darkblue" type="minipage" width="736" valign="top">What is the output?

\begin{V}
print not 3 &lt; 5
\end{V}
</text>
</page>
<page title="What else?" section="">
<layer name="alpha"/>
<layer name="beta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">Let&apos;s try to follow the boundary of the world: We move forward if there is no wall, otherwise turn to the left.</text>
<text layer="beta" pin="h" transformations="translations" pos="0 439.667" stroke="darkblue" type="minipage" width="736" valign="top">\begin{V}
def move_or_turn():
  if hubo.front_is_clear():
    hubo.move()
  else:
    hubo.turn_left()

for i in range(20):
  move_or_turn()
\end{V}
</text>
</page>
<page title="With singing and dancing\ldots" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<layer name="delta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="gamma" active="gamma"/>
<view layers="delta" active="delta"/>
<text layer="alpha" matrix="1 0 0 1 0 88.1675" pin="h" transformations="translations" pos="0 439.667" stroke="darkblue" type="minipage" width="736" valign="top">\begin{V}
def dance():
  for i in range(4):
    hubo.turn_left()

def move_or_turn():
  if hubo.front_is_clear():
    dance()
    hubo.move()
  else:
    hubo.turn_left()
    hubo.drop_beeper()

for i in range(18):
  move_or_turn()
\end{V}
</text>
<text layer="beta" matrix="1 0 0 1 107.435 38.9529" transformations="translations" pos="354.492 246.283" stroke="darkred" type="label" valign="baseline">Note the indentation!</text>
<path stroke="darkred">
48 336 m
48 272 l
</path>
<path stroke="darkred">
48 224 m
48 160 l
</path>
<text layer="gamma" matrix="1 0 0 1 0 88.1675" pin="h" transformations="translations" pos="0 439.667" stroke="darkblue" type="minipage" width="736" valign="top">\begin{V}
def dance():
  for i in range(4):
    hubo.turn_left()

def move_or_turn():
  if hubo.front_is_clear():
    dance()
    hubo.move()
  else:
    hubo.turn_left()
  \dred@hubo.drop_beeper()$

for i in range(18):
  move_or_turn()
\end{V}
</text>
<text transformations="translations" pos="432 192" stroke="darkred" type="label" valign="baseline">What happens now?</text>
<text layer="delta" matrix="1 0 0 1 0 88.1675" pin="h" transformations="translations" pos="0 439.667" stroke="darkblue" type="minipage" width="736" valign="top">\begin{V}
def dance():
  for i in range(4):
    hubo.turn_left()

def move_or_turn():
  if hubo.front_is_clear():
    dance()
    hubo.move()
  else:
    hubo.turn_left()
\dred@hubo.drop_beeper()$

for i in range(18):
  move_or_turn()
\end{V}
</text>
<text transformations="translations" pos="464 192" stroke="darkred" type="label" valign="baseline">\ldots and now?</text>
</page>
<page title="Many choices!" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<layer name="delta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="gamma" active="gamma"/>
<view layers="gamma delta" active="delta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkred" type="minipage" width="736" valign="top">\begin{V}
if hubo.on_beeper():
  hubo.pick_beeper()
else:
  if hubo.front_is_clear():
    hubo.move()
  else:
    if hubo.left_is_clear():
      hubo.turn_left()
    else:
      if hubo.right_is_clear():
        turn_right()
      else:
        turn_around()
\end{V}
</text>
<text layer="beta" matrix="1 0 0 1 -48 16" transformations="translations" pos="480 352" stroke="darkred" type="label" valign="baseline">This is not very readable!</text>
<text layer="gamma" pin="h" transformations="translations" pos="0 528" stroke="darkred" type="minipage" width="736" valign="top">\begin{V}
if hubo.on_beeper():
  hubo.pick_beeper()
\dred@elif$ hubo.front_is_clear():
  hubo.move()
\dred@elif$ hubo.left_is_clear():
  hubo.turn_left()
\dred@elif$ hubo.right_is_clear():
  turn_right()
else:
  turn_around()
\end{V}
</text>
<text layer="delta" matrix="1 0 0 1 0 96" pin="h" transformations="translations" pos="0 63.9124" stroke="darkblue" type="minipage" width="736" valign="top">|elif| combines |else| and |if| to express many alternatives without complicated indentation.</text>
</page>
<page title="while-loops" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="alpha beta gamma" active="gamma"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">A |for|-loop repeats some instructions a fixed number of times.</text>
<text layer="beta" pin="h" transformations="translations" pos="0 471.203" stroke="darkblue" type="minipage" width="736" valign="top">A |while|-loop repeats instructions as long as some condition is true.</text>
<text layer="gamma" pin="h" transformations="translations" pos="0 386.356" stroke="darkblue" type="minipage" width="736" valign="top">Go forward until we reach a beeper:

\begin{V}
\dred@while$ not hubo.on_beeper():
  hubo.move()
\end{V}
</text>
</page>
<page title="Around the world in 80 days" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<layer name="delta"/>
<layer name="epsilon"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="alpha beta gamma" active="gamma"/>
<view layers="alpha beta gamma epsilon" active="epsilon"/>
<view layers="alpha beta gamma delta" active="delta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">Let&apos;s write a program to let the robot walk around the boundary of the world until he comes back to the starting point.</text>
<text layer="beta" matrix="1 0 0 1 0 16" pin="h" transformations="translations" pos="0 404.255" stroke="darkblue" type="minipage" width="736" valign="top">Solution outline:
\begin{enumerate}
\item Put down a beeper to mark starting point
\item Move forward until facing wall
\item Turn left
\item Repeat steps 2 and 3 until we find the beeper
\item Finish when we found the beeper
\end{enumerate}</text>
<text layer="gamma" matrix="1 0 0 1 0 16" pin="h" transformations="translations" pos="0 180.086" stroke="darkblue" type="minipage" width="736" valign="top">\begin{V}
hubo.drop_beeper()
while not hubo.on_beeper():
  if hubo.front_is_clear():
    hubo.move()
  else:
    hubo.turn_left()
\end{V}
</text>
<text layer="delta" transformations="translations" pos="485.86 167.271" stroke="black" type="label" valign="baseline">|hubo.move()|</text>
<path stroke="darkred" arrow="normal/normal">
475.706 179.601 m
362.56 182.502
277.701 169.447
218.227 167.996 s
</path>
<text layer="epsilon" transformations="translations" pos="497.465 128.83" stroke="darkred" type="label" valign="baseline">Doesn&apos;t work!</text>
</page>
<page title="What if the world looks like below?" section="">
<layer name="alpha"/>
<layer name="beta"/>
<view layers="alpha" active="beta"/>
<view layers="alpha beta" active="beta"/>
<image layer="alpha" matrix="1 0 0 1 0 57.46" rect="176.976 74.1757 559.024 453.824" bitmap="6"/>
<text layer="beta" matrix="0.998179 0 0 -2.39357 47.5485 413.587" pin="v" transformations="translations" pos="0.455 127.278" stroke="red" type="minipage" width="650" valign="top">Try the code in the previous page with &quot;amazing2.wld&quot;\\
and see if the previous code works.</text>
</page>
<page title="Sometimes we need right turns" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<layer name="delta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="alpha beta gamma" active="gamma"/>
<view layers="alpha beta gamma delta" active="delta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkred" type="minipage" width="736" valign="top">\begin{V}
hubo.drop_beeper()
hubo.move()
while not hubo.on_beeper():
  if hubo.right_is_clear():
    turn_right()
  elif hubo.front_is_clear():
    hubo.move()
  else:
    hubo.turn_left()
\end{V}
</text>
<text layer="beta" pin="h" transformations="translations" pos="0 197.811" stroke="darkblue" type="minipage" width="736" valign="top">This can go into an \dred{infinite loop}!</text>
<text layer="gamma" matrix="1 0 0 1 6.52814 199.456" transformations="translations" pos="485.86 167.271" stroke="black" type="label" valign="baseline">|hubo.move()|</text>
<path stroke="darkred" arrow="normal/normal">
480.783 374.705 m
421.309 373.98
346.604 379.057
242.161 369.628
210.248 367.452
202.995 367.452 s
</path>
<text layer="delta" pin="h" transformations="translations" pos="0 141.014" stroke="darkblue" type="minipage" width="736" valign="top">Still does not work when there is a wall in front of the starting position!</text>
<image matrix="1 0 0 1 192.928 -24.66" rect="311.382 206.257 424.618 321.743" bitmap="1"/>
</page>
<page title="Getting out of the starting position" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="beta gamma" active="gamma"/>
<text layer="alpha" matrix="1 0 0 1 -0.00003862 0.00018858" pin="h" transformations="translations" pos="0 528" stroke="darkred" type="minipage" width="736" valign="top">\begin{V}
hubo.drop_beeper()
if not hubo.front_is_clear():
  hubo.turn_left()
hubo.move()
while not hubo.on_beeper():
  if hubo.right_is_clear():
    turn_right()
    hubo.move()
  elif hubo.front_is_clear():
    hubo.move()
  else:
    hubo.turn_left()
\end{V}
</text>
<text layer="beta" pin="h" transformations="translations" pos="0 97.3866" stroke="darkblue" type="minipage" width="736" valign="top">Still has a problem if not starting at position (1,1).</text>
<image matrix="1 0 0 1 218.314 -50.0453" rect="288.135 203.258 447.865 324.742" bitmap="3"/>
<text layer="gamma" matrix="1 0 0 1 -0.00003862 0.00018858" pin="h" transformations="translations" pos="0 528" stroke="darkred" type="minipage" width="736" valign="top">\begin{V}
hubo.drop_beeper()
\dred@while$ not hubo.front_is_clear():
  hubo.turn_left()
hubo.move()
while not hubo.on_beeper():
  if hubo.right_is_clear():
    turn_right()
    hubo.move()
  elif hubo.front_is_clear():
    hubo.move()
  else:
    hubo.turn_left()
\end{V}
</text>
</page>
<page title="Write code for humans" section="">
<layer name="alpha"/>
<view layers="alpha" active="alpha"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top" size="small">One of the secrets of writing good, correct, elegant programs is to write them as if you wrote them for a \dred{human} reader, not a computer.  Let&apos;s clean up our program:

\begin{V}
# This program lets the robot go around his world counter-
# clockwise, stopping when he returns to the starting point.
from cs1robots import *
load_world()
hubo = Robot(beepers = 1)

def turn_right():
  for i in range(3): 
    hubo.turn_left()

def mark_starting_point_and_move():
  hubo.drop_beeper()
  while not hubo.front_is_clear():
    hubo.turn_left()
  hubo.move()
\end{V}
</text>
</page>
<page>
<layer name="alpha"/>
<view layers="alpha" active="alpha"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top" size="small">\begin{V}
def follow_right_wall():
  if hubo.right_is_clear():
    # Keep to the right
    turn_right()
    hubo.move()
  elif hubo.front_is_clear(): 
    # move following the right wall
    hubo.move()
  else:
    # follow the wall
    hubo.turn_left()

# end of definitions, begin solution

mark_starting_point_and_move()
            
while not hubo.on_beeper(): 
  follow_right_wall()
\end{V}
</text>
</page>
<page title="Stepwise refinement" section="">
<layer name="alpha"/>
<view layers="alpha" active="alpha"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">Steps to follow when writing a program:

\begin{itemize}
\item start simple;
\item introduce small changes, one at a time;
\item \dred{make sure} that each change does not invalidate the work you have done before;
\item add appropriate comments (not just repeating what the instruction does);
\item choose descriptive names.
\end{itemize}
</text>
</page>
</ipe>
