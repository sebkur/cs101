<?xml version="1.0"?>
<!DOCTYPE ipe SYSTEM "ipe.dtd">
<ipe version="70206" creator="ipetoipe 7.2.7">
<info created="D:20100118121208" modified="D:20101028144912" title="CS101 Lecture 9" author="Otfried Cheong"/>
<bitmap id="1" width="960" height="650" length="9867" ColorSpace="DeviceRGB" Filter="FlateDecode" BitsPerComponent="8" encoding="base64">
eNrt3dGOHDeyRVF9uv5cgpFPEqByMRlBRpCLuC+N8cjL9Kmsrbqa7p8/HcdxHMdxHMcZOL+6
HWZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZub/
Pz9+/Pd/7pmZmZmZmZmZmZlZPzMzMzMzMzMzMzPrZ9tgZmZmZmZmZmbWz7bBzMzMzMzMzMys
n90zMzMzMzMzMzOzfnbPzMzMzMzMzMzM+tk9MzMzMzMzMzMzM+tnZmZmZmZmZmZmZv3MzMzM
zMzMzMzMrJ9tg5mZmZmZmZmZWT+7Z2ZmZmZmZmZmZv3snpmZmZmZmZmZmfWze2ZmZmZmZmZm
ZmbWz8zMzMzMzMzMzMz6mZmZmZmZmZmZmVk/2wYzMzMzMzMzM7N+tg1mZmZmZmZmZmb97J6Z
mZmZmZmZmZn1s3tmZmZmZmZmZmZm1s/MzMzMzMzMzMzM+pmZmZmZmZmZmZlZP9sGMzMzMzMz
MzOzfrYNZmZmZmZmZmZm/eyemZmZmZmZmZmZ9bN7ZmZmZmZmZmZmZtbPzMzMzMzMzMzMzPqZ
mZmZmZmZmZmZWT/bBjMzMzMzMzMzs362DWZmZmZmZmZmZv3snpmZmZmZmZm/MDtO3/P0s3tw
HMdxHGdpgfh9CrPPn90zMzMzMzMzMzOzfnbPzMzMzMzMzMzMzPqZmZmZmZmZmZmZWT8zMzMz
MzMzMzMz62fbYGZmZmZmZmZm1s+2wczMzMzMzMzMrJ/dMzMzMzMzMzMzs352z8zMzMzMzMzM
zMz6mZmZmZmZmZmZmVk/MzMzMzMzMzMzM+tn22BmZmZmZmZmZtbPtsHMzMzMzMzMzKyf3TMz
MzMzMzMzM7N+ds/MzMzMzMzMzMzM+pmZmZmZmZmZmZlZPzMzMzMzMzMzMzPrZ9tgZmZmZmZm
ZmbWz7bBzMzMzMzMzMysn90zMzMzMzMzMzOzfnbPzMzMzMzMzMzM+tk9MzMzMzMzMzMzM+tn
ZmZmZmZmZmZmZv1sG8zMzMzMzMzMzPrZNpiZmZmZmZmZmfWze2ZmZmZmZmZmZtbP7pmZmZmZ
mZmZmVk/u2dmZmZmZmZmZmZm/czMzMzMzMzMzMysn5mZmZmZmZmZmZn1s20wMzMzMzMzMzPr
Z/fMzMzMzMzMzMysn90zMzMzMzMzMzOzfnbPzMzMzMzMzMzMzPqZmZmZmZmZmZmZWT8zMzMz
MzMzMzMz62fbYGZmZmZmZmZm1s+2wczMzMzMzMzMrJ/dMzMzMzMzMzMzs352z8zMzMzMzMzM
zMz6mZmZmZmZmZmZmVk/MzMzMzMzMzMzM+tn22BmZmZmZmZmZtbPtsHMzMzMzMzMzKyf3TMz
MzMzMzMzM7N+ds/MzMzMzMzMzMzM+pmZmZmZmZmZmZk5op///tI9MzMzMzMzMzMzM+tnZmZm
ZmZmZmZmZv3MzMzMzMzM3MTsOH3PE8z/+tJxHMdxHCelQPw+hdnnz+6ZmZmZmZmZmZlZP7tn
ZmZmZmZmZmZmZv3MzMzMzMzMzMzMrJ+ZmZmZmZmZmZmZ9bNtMDMzMzMzMzMz62fbYGZmZmZm
ZmZm1s/umZmZmZmZmZmZWT+7Z2ZmZmZmZmZmZmb9zMzMzMzMzMzMzKyfmZmZmZmZmZmZmfWz
bTAzMzMzMzMzM+tn22BmZmZmZmZmZtbP7pmZmZmZmZmZmVk/u2dmZmZmZmZmZmZm/czMzMzM
zMzMzMysn5mZmZmZmZmZmZn1s20wMzMzMzMzMzPrZ9tgZmZmZmZmZmbWz+6ZmZmZmZmZmZlZ
P7tnZmZmZmZmZmZm/ayfmZmZmZmZmZmZmfUzMzMzMzMzMzMzs362DWZmZmZmZmZmZv1sG8zM
zMzMzMzMzPrZPTMzMzMzMzMzM+tn98zMzMzMzMzMzKyf9TMzMzMzMzMzMzOzfmZmZmZmZmZm
ZmbWz7bBzMzMzMzMzMysn22DmZmZmZmZmZlZP7tnZmZmZmZmZmZm/eyemZmZmZmZmZmZ9bN+
ZmZmZmZmZmZmZtbPzMzMzMzMzMzMzPrZNpiZmZmZmZmZmfWzbTAzMzMzMzMzM+tn22BmZmZm
ZmZmZtbP7pmZmZmZmZmZmVk/u2dmZmZmZmZmZmZm/czMzMzMzMzMzMysn22DmZmZmZmZmZlZ
P9sGMzMzMzMzMzOzfrYNZmZmZmZmZmZm/eyemZmZmZmZmZmZ9bN7ZmZmZmZmZmZmZtbPzMzM
zMzMzMzMzPqZmZmZmZmZmZmZeW8/d8hp22BmZmZmZmZmZtbPtsHMzMzMzHyw2XH6nqeQv/zS
cRzHcRwnpkD8PoXZ58/umZmZmZmZmZmZWT/rZ2ZmZmZmZmZmZmb9zMzMzMzMzMzMzKyfbYOZ
mZmZmZmZmVk/2wYzMzMzMzMzM7N+tg1mZmZmZmZmZmb97J6ZmZmZmZmZmZn1s3tmZmZmZmZm
ZmZm1s/MzMzMzMzMzMzM+tk2mJmZmZmZmZmZ9bNtMDMzMzMzMzMz62fbYGZmZmZmZmZm1s/u
mZmZmZmZmZmZWT+7Z2ZmZmZmZmZmZmb9zMzMzMzMzMzMzKyfmZmZmZmZmZmZmfWzbTAzMzMz
MzMzM+tn22BmZmZmZmZmZtbP7pmZmZmZmZmZmVk/u2dmZmZmZmZmZmb9rJ+ZmZmZmZmZmZmZ
9TMzMzMzMzMzMzOzfrYNZmZmZmZmZmZm/WwbzMzMzMzMzMzM+tk9MzMzMzMzMzMz62f3zMzM
zMzMzMzMrJ/1MzMzMzMzMzMzM7N+ZmZmZmZmZmZmZtbPtsHMzMzMzMzMzKyfbYOZmZmZmZmZ
mVk/u2dmZmZmZmZmZmb97J6ZmZmZmZmZmZn1c7ectg1mZmZmZmZmZmb9bBvMzMzMzMzMzMz6
2TaYmZmZmZmZmZn1s3tmZmZmZmZmZmbWz/qZmZmZmZmZmZmZWT8zMzMzMzMzMzMz62fbYGZm
ZmZmZmZm1s+2wczMzMzMzMzMrJ9tg5mZmZmZmZmZWT+7Z2ZmZmZmZmZmZv2sn5mZmZmZmZmZ
mZn1MzMzMzMzMzMzM7N+tg1mZmZmZmZmZmb9bBvMzMzMzMzMzMz62TaYmZmZmZmZmZn1s3tm
ZmZmZmZmZmbWz/qZmZmZmZmZOdDsOH3Pk8TvvnQcx3Ecx3lZIH6fwuzzZ/fMzMzMzMzMzMys
n/UzMzMzMzMzMzMzs35mZmZmZmZmZmZm1s+2wczMzMzMzMzMrJ9tg5mZmZmZmZmZWT/bBjMz
MzMzMzMzs352z8zMzMzMzMzMzPpZPzMzMzMzMzMzMzPrZ2ZmZmZmZmZmZmb9bBvMzMzMzMzM
zMz62TaYmZmZmZmZmZn1s20wMzMzMzMzMzPrZ/fMzMzMzMzMzMysn/UzMzMzMzMzMzMzs35m
ZmZmZmZmZmZm1s+2wczMzMzMzMzMrJ9tg5mZmZmZecjsvZuZWT/bBjMzMzMzs35mZtbPtsHM
zMzMzKyfbYNZP7tnZmZmZmZm/WwbzPrZPTMzMzMzM+tn98ysn/UzMzMzMzOzfnbPzMz62TaY
mZmZmfWze2Zm1s+2wczMzMzMrJ+ZmfWzbTAzMzMzM+tn22DWz+6ZmZmZmZlZP9sGs352z8zM
zMzMzPrZPTPrZ/3MzMzMzMysn90zM7N+ZmZmZmZm1s/umZlZP9sGMzMzMzOzfmZm1s+2wczM
zMzMrJ+ZmfWzbTAzMzMzM+tn22DWz+6ZmZmZmZlZP7tnZv2sn5mZmZmZmZuavXczM+tn22Bm
ZmZmZtbPzMz62TaYmZmZmZn1s20w62f3zMzMzMzMrJ9tg1k/ew0yMzMzMzPrZ/fMzKyfmZmZ
mZmZ9bN7ZmbWz7bBzMzMzKyfvXczM+tn22BmZmZmZtbPzMz1+tn3YGdmZmZmZtbP7pmZWT8z
MzMzMzPrZ/fMzKyfbYOZmZmZmVk/MzPrZ9tgZmZmZmbWz8zM+tk2mJmZmZmZ9bNtMOtn98zM
zMzMzLz4zVo/MzPrZ9tgZmZmZmbWz7bBrJ/dMzMzMzMzs37+l9lx+p7nZZXxFzuO4ziOs/3N
uux7t99bMfv82T0zMzMzMzP7/Nk2mPWzfmZmZmZmZtbPtsHMrJ+ZmZmZmZn1s3tmZtbPtsHM
zMzMrJ/1MzOzfrYNZmZmZmb9rJ+ZmfWzbTAzMzMzM+tn22DWz+6ZmZmZmZlZP9sGs372GmRm
ZmZmZtbPtsHMrJ+ZmZmZmZn1s3tmZtbPtsHMzMzMrJ+9dzMz62fbYGZmZmbWz/qZmVk/2wYz
MzMzM/NwP39+79bPzMz62TaYmZmZmfWzfmZm1s+2wczMzMzMrJ9tg1k/u2dmZmZmZmb9bBvM
+tlrkJmZmZmZWT/bBjOzfmZmZmZmZtbP7pmZWT/bBjMzMzOzfvbezcxcs59rvCRtg5mZmZlZ
P+tnZmb9bBvMzMzMzMz6mZlZP9sGMzMzMzOzfrYNZv3snpmZmZmZmfWzbTDrZ/3MzMzMzMys
n22DmVk/2wYzMzMzs352z8zM+tk2mJmZmZn1s35mZm7Wz5teobbBzMzMzKyf9TMzs362DWZm
Zmbme80jb7j6mZlZP9sGMzMzM7N+1s/MzPrZNpiZmZmZmfWzbTDrZ/3MzMzMzMysn22DWT/r
Z2ZmZmZmZv1sG8zM+tk2mJmZmZn1s3tmZtbPtsHMzMzMrJ/1MzOzfrYNZmZmZmb9rJ+ZmfWz
bTAzMzMzM+tn22DWz/qZmZmZmZlZP9sGs36e7edVL1jbYGZmZmbWz/qZmVk/2wYzMzMzs37W
z8zM+tk2mJmZmZmZ9bNtMOtn/czMzMzMzKyfbYNZP+tnZmZmZmZm/WwbzMz62TaYmZmZmfWz
e2Zm1s+2wczMzMysn/UzM7N+tg1mZmZmZv2sn5mZ9bNtMDMzMzMz62fbYNbP+pmZmZmZmVk/
2wazftbPzMzMzMzM+tk2mJn1s20wMzMzM+tn22BmbtzPE69u22BmZmZm1s/t+tlx+p7nZfXu
Lx76MpDhOI7jOFe9Ow+9w868HS/9Z/R7K2afP/v8mZmZmZmZ2efPtsGsn/WzPTMzMzMz62fb
YGbWz7bBzMzMzKyf3TMzs362DWZmZmZm/ayfmZn1s20wMzMzM+tn/czMrJ/1MzMzMzMzs362
DWb9HNXPI/9d22BmZmZmvrmfi/w4M9tg1s/62TaYmZmZmfWzbTAz62fbYGZmZmbWz+6ZmVk/
2wYzMzMzs37Wz8zM+tk2mJmZmZn1s35mZtbP+pmZmZmZmXlbP9fIadtgvqifZ17d+pmZmZmZ
mVk/2wazftbP9szMzMzMrJ9tg1k/62fbYGZmZmbWz7bBzLy4nwMfFLbBzMzMzKyf9TMz8239
PPSf6ufuZs9nZmZmZv1sG8z6WT/bs35mZmZm1s+2wcysn21DP9sGMzPzSf0c9w5rG8zM+tk2
9LNtMDMz62fPZ2Zm/Wwb+tk2mJmZ9bN+ZmbWz/pZP7tnZmZm/ayfbYNZP+tn/eyemZmZmfWz
bTDrZ/1sz/qZmZmZWT/bBrN+zu3nuO+uYxv62TaYmZn1s35mZtbP+lk/u2dmZmb9rJ9tg1k/
62f97J6ZmZmZ9bNtMOtn/WzP+pmZmZlZP9sGs37Wz/asn5mZmZn1s20wM+tn29DPtsHMzKyf
3TMzs362Df1sG8zMzPpZPzMz62fb0M/umZmZWT/rZ9tgPqefh5Ip8Iet2IZ+ds/MzMz6WT8z
Mx/QzzOPAv2sn90zMzMzs362DWb9rJ/1s3tmZmZm3tvPns/MzPrZNmqaS36+UYXhWcfMzKyf
bYNZP+tne9bPtsHMzKyfbYNZP+tn27iqn0vWtT0zMzPrZ9tg1s/6WT/36GfvKczMzPrZNpiZ
9bNt6Gf9zMzMrJ/1MzPzhf388S+2jbv6Oe/H9HhPYWZm1s+2wcysn21DP+tnZmZm/ayfmZn1
s2206+fAx7V+tmdmZv2sn5mZ9bN+1s/62Z6ZmZn1s20w62f9rJ/1s20wMzPrZ9tg1s9r+nnk
xW4bh/dz4O+89DMzM7N+rhHbtsGsn/WzPetn22BmZtbPtsGsn/WzPS/q58Dv0qyfmZmZ9bN+
tmdm/ayfz+vntD8M788EMjMz6+dERug9O07f87w01v+Nhv6+y5BO0r/foS9nlmNmjuN4qHaJ
BL+3Yvb5s8+fff7s82fbYGZm9vmzbTDrZ/1szy/7eeaNYFmZ62dmZmb9rJ+ZmfWzbehn/czM
zKyf9TMzs37Wz1f1c96X+pmZmVk/62dmZv1sG/pZPzMzM+tn/WzPzPpZP+vniC/H7lk/MzMz
62f9zMysn22jRT+nxfZUP2/KaXtmZmbe2c+rnoS2wayf9fMNe67yMwRH/mL9zMzMrJ8j/0a2
wcysn21jWT9vim39zMzMrJ/1MzOzfrYN/ZzVzzP/RJ51zMzM+tk2mPWzfrYN/ayfmZmZ9bN+
ZmbWz7ZRoZ8Dp6Kf7ZmZWT/rZ3tm1s/6WT/rZ3tmZtbP+tk2mPWzftbP+tmzjpmZWT/bBrN+
1s/6WT971jEzM+tn22DWz/rZNjb2c9yu9DMzM7N+1s/MzPrZNvSzfrZnZmb9rJ/tmVk/6+d+
/Vzjp43oZ3tmZtbP+tmemfWzfm4ZzPrZs46ZmVk/2wazftbPtqGfbYOZmVk/2wYzs362Df2s
n5mZmXv1c+Bbqn5mZtbPtnF5P+fdc4t+rnHtXoPMzKv7OfBRsOlRbxvM+lk/62f9vMhc8tq9
BpmZ9bNtMOtn/Wwb+jnxJ8LoZ69BZmb9bBvM+lk/6+fz7lk/ez4zM+tn/czMrJ9tI3Ab+lk/
ew0yM+tn22DWSPrZNvSzfvZ8Zmbu1s+Rz7pVOW0bzPpZP+tn/ayfvQaZmfWzbTBrJP1sG/pZ
P3s+MzPrZ/3MzHxdP5/3fSH0s37Wz8zM+lk/2zOzfp747+pn/ayf7ZmZWT/rZ3tm1s/6WT/r
Z/3MzKyf9bNtMOvnmPd9/ayf9bN+ZmbWz/rZnpn1s37Wz/pZPzMzMy/u58C6tg1mjaSfbUM/
62fPZ2bmy/s57RFkG8z6WT/bxvn9HPcn9vWz1yAzs362DWaNFP4o0M/6WT/rZ2Zm/ayfbYNZ
P5foZ72hn7f3c+D3M7dnZmb9rJ/tmVk/z5vT/scOtqGf9bPnMzOzftbPzMz62Tb0s372fGZm
1s/6mZlZP6/ojeOfG/p5TT/780jMzMz62TaYNdKd/VzzWaefK/TzyK+sn5mZmfWzbTBrJP1s
G/p5UT9vymnPZ2bmW/o57p3dNpg1kn7Wz/pZP3s+MzPrZ9tg1s9X9HPcj3HRz4e/Bjv286qc
9nxmZtbPtsGsn4/q55noDfylbEM/62fPZ2Zm/WwbzBrptn6OaxXb0M8v96yfmZn1s362Z2aN
pJ9tQz/X7+eZ71nt+czMrJ9tg1k/62f9rJ9nxnBAP9sGM7N+nu5nx+l7nvG3Nn/+cui/O/M3
6niTM5dz+SulyAiX/Ru0Dcfx7hyO9HsrZp8x7vwNb+BHypd//uwzxnafP8/M2zaYmX3+vPXz
Z9tg1s/6eeipop/184Zf2Ta8pzDrZ/1sz8z6WT/rZ/1coJ+L/Bhx7ynM+lk/2zOzftbP+lk/
r1ts3j+v5zMzs362DWb9rJ/1s35O24Z+9nxmZtbPtsGsnzfntH7Wz9X6eddvD/Wz9xRm/bzx
/dc2mPWzftbP+lk/Z/zzej4zMzcy62dm/ayff637/9Hr5/avQf28ReU9hZm5UT/7uaXM+vnU
fl6WH/pZP1fr55q/lOczM/Op/ew9hVk/39nPMyr9rJ8z9lyznzv82Wl7Zq7eovrZNpj1s37W
z1f1865fWT97T2HWz/rZnpn1s34u8/T2GtTP+tl7CrN+1s/MzPpZP+tn/VzrS89nZv2sn22D
WT9X6+ddv5R+1s/6WT8zM+tn22DWz/pZP+vnY8pcP3tPYdbP+tmemfWzftbP+jmpn3f9yt5T
mPWzfrZnZv1crWT0s37Wz/rZewqzftbP9sysn/WzftbPXfp51R/2sGdm/ayf7Zk5au36WT97
Depn/ew9hVk/62d7ZtbP+lk/d+3nZb+yfvaewqyf9bM9M+tn/ayfG/Zz0ffBtPdQ/czMrJ9t
g1k/6+fG96yf9bN+9p7CrJ/1sz0zX9DPkeZVf/RUP+vnk/r5b/OuPwriPYVZPxcODL3BrJ/d
s37Wz/pZP3vWMetn/cysn92zftbP3rsb9/OM2TaY9bN+tmdm/ayf9TPzef2cZ7YNZv289jFi
G8z62T2nxol+9tzQz/qZWT+37w3bYLZn96yfbUM/f2nO+4Hd+plZP+sNe2a252v7uUhO24b3
bv1sG8z62XsKM7M962fbYG7Uz6vywzaY9bNtMDNrJP2cnUy2oZ9jzPrZnpn1MzOzfnbPi/t5
089btA39rJ/tmVk/2wazfnbP+lk/M69+79bP9sysn5mZ9bN7btTPEwzbYNbPtsGsn22DWT+7
56L9nPY9b/Uzs362DWb9bBvMzPpZP+tnZv2sn5n1s3tmZtbP+nlDP3sNMrc22zOzfnbPzMz6
+dxt6GfbYNbPtsGsn5mZ9bN71s+2wayfbYNZPzMz62f3rJ9tg1k/u2dm/WwbzPrZPR/bz2nt
bRvM+tk9M+tn22DWz+65ijmvn+O+77RtMOtn98ysn22DWT+75x79vOxLr0Fm/eyemfWzbTAz
6+eO5hrBbBvM+tk9M+tn22Bm1s8H9nPgf9drkFk/u2dm/WwbzMz6WT/rZ2b97J6Z9bN7ZmbW
zzf3s+czM/P0C8c9M+tn22Bm1s8nm/WzbTDrZ2b97J6ZmfWzbTAzM+tn22C+uJ8dp9F5XqHu
wXEczzrHsdid/8h+b8Xs82f3zMzM7FlnG8w+f2Zm9p7inpmZmT3r3DOzfrYNZu8p3lOYmZk9
69wzs362DWZm7ynMzMzMnnXM+tk9MzN7T7ENZmZmzzpm/eyemZm9p9gGMzOzZ51tMOtnZmbv
Ke6ZmZnZs842mF9MVD8zM3tPcc/MzMyedbbBrJ+Zmb2nuGdmZmbPOvfMrJ9tg9l7intmZmb2
rHPPzPrZNpiZvacwMzN71rlnZv1sG8zM3lOYmZmZPeuY9bN7Zmb2nmIbzMzMnnW2oZ/dMzOz
9xTbYGZm9qyzDebxibpnZmbvKbbBzMzsWWcbzPqZmdl7intmZmb2rLMNZv3MzOw9xT0zMzMf
+Kz780v3zKyfbYOZWT8zMzMz62dm/eyemZn1s20wMzPrZ2b97J6ZmfWzbTAzM+vn0YKyDf3s
npmZ9bNtMDMz62f9rJ/dMzOzfnbPzMzM+lk/M+tnZmb97J6ZmZn1c3wU6Wf97J6ZmfWze2Zm
ZtbP+plZPzMz62f3zMzMrJ8X9LPns352z8zM+tk2mJmZS/ZzYLroZ3vO+NftnpmZ9bNtMDMz
62f9fL758799/czMrJ/dMzMzs37Wz/b8enX6mZlZP7tnZmZm/ayf9bN+ZmbWz+6ZmZlZP+tn
e9bPtsHsPcXzmZmZWT8n5fTMn4D1fNbP7pmZWT/bBjMzs37Wz/pZPzMz62f3zMzMrJ/1sz3r
Z2Zm/eyemZmZ9fPev6/ns352z8zM+tk2mJmZj+/nwGD2fNbP7pmZWT/bBjMzs37Wz/pZPzMz
62f3zMzMrJ/1sz3rZ2Zm/eyemZmZDzZ37Oc/v7QN/eyemZn1s20wMzOfkNOByaSf9bN7ZmbW
z7bBzMysn/WzftbPzMz62T0zMzNf1c+B39JZP+tn/czMrJ/dMzMzs37Wz/asn5mZ9bN7ZmZm
1s8Z/Tyhso0S5mW/mfLcYGbWz7bBzMysn+eQtqGfPTeYmfWzbTAzMx/Yz0P/qX7Wz+6ZmVk/
u2dmZmb9nIO0jdP62T0zM+tn98zMzHxJP6+KIv2snz03mJn1s20wMzPrZ/2sn90zM7N+ds/M
zMz6eQPSNvRz83t2nEbnef26B8dxnC+fk5+/3MVwCm7Dv8Gxy/RZAbPPn90zMzPzqZ8x7voc
2OfP7bax6d+g5wYzs362DWZmZv2sn0/o55H3X/fMzKyf3TMzM/M5jbSqgvSzfnbPzMz62TaY
mZn185qnt23oZ9tgZtbPtsHMzMysn/Wz1yAzs362DWZmZmb9rJ/dMzOzfnbPzMzMzPpZP+tn
Zmb97J6ZmZmZ9bNt6GdmZmb9zMzMzKyf3fOGfnbPzMz62T0zMzMz62f9rJ+ZmfWze2ZmZmbW
z7ahn5mZmfUzMzMzs352z/rZNpiZ9TMzMzOzfnbP+tlrkJlZP9sGMzMzs37Wz16DzMz62TaY
mZmZ9bN+ds/MzPrZPTMzMzNX6OeSda2f3TMzs352z8zMzMz6WT/rZ2bm880jL3b3zMzMzNyj
n0uGnH52z8zM+tk9MzMzM7fsZ12nn70GmZn1s20wMzPrZ/2sn70GmZm3PHLdMzMzM7N+ds/6
mZmZWT8zMzMz62ddt7if7ZmZWT+7Z2ZmZmb9bBv6mZmZWT8zMzMz6+ecd43z71k/MzPrZ/fM
zMzMrJ9XJaJ+tmdmZv3snpmZmZmv6+eJYlx3z4FZq5+ZmZn1MzMzM7N+Dvylar6n5PWzn1PD
zKyf3TMzMzOzftbP+pmZmVk/MzMzM+tn/bz9Yu2ZmVk/u2dmZmZm/ayf9TMzs352z8zMzMwH
mAMbeFc/L/tDF/rZa5CZWT8zMzMzM+tn/ew1yMysn22DmZmZWT8X72d7ZmbWz+6ZmZmZ+Yx+
nmnCIv2c18D6mZmZWT8zMzMzMxfp512MmX7uH8xeg8zM+tk2mJmZmfWzfvYaZGbWz7bBzMzM
rJ/1sz0zM+tn98zMzMysnw/uZ3tmZmbWz8zMzMz6uWUh62evQWZm/WwbzMzMzPq5fGzbMzMz
s35mZmZmvtGsn99+ac/MzMz6mZmZmVk/62f9zMzMPPXYdM/MzMzM+nnNDy5p+Kc77JmZWT/r
Z2ZmZmb9nPgd2/SzPTMzH9nP7pmZmZlZPyd9i2P9bM/MzPrZPTMzMzPr5+79PIS0Z2ZmZv3M
zMzMzDwRkPrZnpmZrzDHPRjdMzMzM7N+1s/2zMx8XT+7Z2ZmZmbm+v08gwz8niH2vMnsOHvP
8yhwD47jOM43bxOB7xqff+Whv2/eX+xNs+gs/T6F2efPtsHMzMzs82efP9szM3OqOe/bb7pn
ZmZmZuYl7xr62Z6ZmQv1c95zwzaYmZmZmZNS/PPPws7rZ9tgZtbPvxb+6CjbYGZmZmZu18+2
wcysn/UzMzMzM/Px/TzxS9kGMzPz8JNBPzMzMzMz62fbYGbWz1H97J6ZmZmZmevltH5mZmYu
1M/umZmZmZn5sH7e9MZnG8zMx/aze2ZmZmZm1s/umZlZP+tnZmZmZmZmZmZm5n+Za/zJLttg
ZmZmZmZmZmbWz+6ZmZmZmZmZmZlZP7tnZmZmZmZmZmZm/ayfmZmZmZmZmZmZmfUzMzMzMzMz
MzMzs362DWZmZmZmZmZmZv1sG8zMzMzMzMzMzOXO52DWz8zMzMzMzMzMzMz6mZmZmZmZmZmZ
mTmjn90zMzMzMzMzMzMzs35mZmZmZmZmZmZm1s/MzMzMzMzMzMzM+tk2mJmZmZmZmZmZy/az
e2ZmZmZmZmZmZmbWz8zMzMzMzMzMzMz6mZmZmZmZmZmZmVk/2wYzMzMzMzMzM3PZYNbPzMzM
zMzMzMzMzPqZmZmZmZmZmZmZOaGf3TMzMzMzMzMzMzOzfmZmZmZmZmZmZmbWz8zMzMzMzMzM
zMz62TaYmZmZmZmZmZnrFLJ+ZmZmZmZmZmZmZtbPzMzMzMzMzMzMzDHBPPKle2ZmZmZmZmZm
ZtbP33+HZ/fMzMzMzMzMzMysn/UzMzMzMzMzMzMz88t+ds/MzMzMzMzMzMyXmyc+cHbPzMzM
zMzMzMzM+vn7YHbPzMzMzMzMzMzMt/eze2ZmZmZmZmZmZmb+EMz6mZmZmZmZmZk59cTllnvW
z7bBzMzMzMzMfF0/j/x8Ove8x5wWzO6ZmZmZmZmZmXk2xkrWtX7Wz8zMzMzMzMzMLfs57lul
2cb7f2X2zMzMzMzMzMxcxzz0gfOqnNbP+pmZmZmZmZmZ+UBzWk7rZ/3MzMzMzMzMzLzRnHSe
zHv3pfP9xTqO4ziO4zire2zLmfh02ufPPn9mZmZmZmZmZr7drJ/1MzMzMzMzMzMzc1JOr/pG
H/rZnpmZmZmZmZmZW5r793MkUj8zMzMzMzMzMzMH9nPNnNbP9szMzMzMzMzMrJ/XRO+mf0B7
ZmZmZmZmZmY+w7yun4v8UvqZmZmZmZmZmZk5r0Vb9PNQEm/6RN2emZmZmZmZmZmvMB/QzzX+
RIo9MzMzMzMzMzPrZ/1sz8zMzMzMzMzMzPrZNpiZmZmZmZmZmcv1c97/BrDk9wyxZ2ZmZmZm
ZmZm/byunzv+kBd7ZmZmZmZmZmbWz8u+cdzHv9g2mJmZmZmZmZmZ9bN+ZmZmZmZmZmZm1s/f
/lIjX9oGMzMzMzMzMzPzdf088TeyDWZmZmZmZmZm5h7mmR/tp5+ZmZmZmZmZmZkv7+dNPzjb
NpiZmZmZmZmZmfWze2ZmZmZmZmZmZj7cvOkH/9kGMzMzMzMzMzPzgWb9zMzMzMzMzMzMzPy6
n90zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM3Pc+Q3/bFIT
</bitmap>
<bitmap id="2" width="58" height="50" length="865" ColorSpace="DeviceRGB" Filter="FlateDecode" BitsPerComponent="8" ColorKey="fbfbfd" encoding="base64">
eNrtmE1LG0EYx+NrXBQtoXhQFJEYYnxpXEMrEQIJsgkSSihFog095OBFwZ5VqEe9ikggNyOi
HqyoiO03CEHEg4iICC099DNIa//JtNNhNptskgkmdB/+hNnMDPnx5HmZ2YeHnw+GqlzfTB8g
dlD5tFTV4t6qcCw3qHzUqvj3DdT/GfWpZCrQFuQFsrHvrw0PvxocdPfps9JRlecKGKD1qXUt
HX88TiVSEJZFX7z1+/0NGWtsbGxqapIkCZ9msxmPDdrmdDpLAdaJygGD7Wt9/XezGcxzc3Mr
+WxtbW0/Y263e2hoqGhgSpsXlQXGrl8Zzc/PnwUCjyZTyuVSQ+7MzGDqrrcX49XV1b29vVgs
JpwWj/geYFq0ad/W1f1obv6sKOAhOpdlFnU3HKZT9z095aPVQqW0NTU1nZ2d09PTRdC2trZ6
vd7igIujxQJCC6pCIwF7BwYGxNLmjgTiW3riyptldCVoURnE0ubNMsQtaAOBALJsRZ+VL251
0pJIqAraT5Lk8USJb08nJ2lCcbq1WiuB9osk6Y8E4d2hoF5WW1tLOm9/f3/eXgbURCKxvLws
pPMWcU4ALX4UwAUdh0ZGRkQdbPQbdaxO3xL3Et+2tbX5fL4SgbkAxph+Eq9CeCQrfV4fDloI
v8i7SPqccBZIJl/mQN3aen9/n+5liIeNjY3x8XGHw1G6h2kkcLQEmNLKsswV29PTyVTKlRV1
eztyd9fLloV4PA5Um80mnJYYR6soCp1CjhOSk5Pg+bnMd96dmdvbPxUsGo3SXeXwLTtmaUly
LS0twVeUFnZ09PriwvnvVLMbvrmx0UfQjo2NJZNJhD2iXSwta2pa5Is/Yywt7PAwdHk5jMH+
/tT1tZ2dAi1qwujoqMViKTEMcrcJLsvIjYxgq2vCwcGbx0fT1ZVDXROEVDD9dYzbQpxst9sB
HAwGs17ErFYrUBcXFzFuaZG7u0PIMLFXYLaU5V4MYEo7MTHBXW89Hg+ldblcQrwqkJabNWgN
2iehhXKsJMcwdZbRWTWtcGCW1tJsyVq7aPlSVzBy+6azbAUr/XyrVXjZ7tD+rD0rbUdHB/dm
KRQKUdqurq7Z2Vn27rC5uSmcVg2sRZu1HXC+FfvWTmd304rbHO88y/FG1JAhQ4YqWb8B0wZT
mQ==
</bitmap>
<ipestyle name="presentation">
<symbol name="arrow/arc(spx)">
<path stroke="sym-stroke" fill="sym-stroke" pen="sym-pen">
0 0 m
-1 0.333 l
-1 -0.333 l
h
</path>
</symbol>
<symbol name="arrow/farc(spx)">
<path stroke="sym-stroke" fill="white" pen="sym-pen">
0 0 m
-1 0.333 l
-1 -0.333 l
h
</path>
</symbol>
<symbol name="mark/circle(sx)" transformations="translations">
<path fill="sym-stroke">
0.6 0 0 0.6 0 0 e
0.4 0 0 0.4 0 0 e
</path>
</symbol>
<symbol name="mark/disk(sx)" transformations="translations">
<path fill="sym-stroke">
0.6 0 0 0.6 0 0 e
</path>
</symbol>
<symbol name="mark/fdisk(sfx)" transformations="translations">
<group>
<path fill="sym-stroke" fillrule="eofill">
0.6 0 0 0.6 0 0 e
0.4 0 0 0.4 0 0 e
</path>
<path fill="sym-fill">
0.4 0 0 0.4 0 0 e
</path>
</group>
</symbol>
<symbol name="mark/box(sx)" transformations="translations">
<path fill="sym-stroke" fillrule="eofill">
-0.6 -0.6 m
0.6 -0.6 l
0.6 0.6 l
-0.6 0.6 l
h
-0.4 -0.4 m
0.4 -0.4 l
0.4 0.4 l
-0.4 0.4 l
h
</path>
</symbol>
<symbol name="mark/square(sx)" transformations="translations">
<path fill="sym-stroke">
-0.6 -0.6 m
0.6 -0.6 l
0.6 0.6 l
-0.6 0.6 l
h
</path>
</symbol>
<symbol name="mark/fsquare(sfx)" transformations="translations">
<group>
<path fill="sym-stroke" fillrule="eofill">
-0.6 -0.6 m
0.6 -0.6 l
0.6 0.6 l
-0.6 0.6 l
h
-0.4 -0.4 m
0.4 -0.4 l
0.4 0.4 l
-0.4 0.4 l
h
</path>
<path fill="sym-fill">
-0.4 -0.4 m
0.4 -0.4 l
0.4 0.4 l
-0.4 0.4 l
h
</path>
</group>
</symbol>
<symbol name="mark/cross(sx)" transformations="translations">
<group>
<path fill="sym-stroke">
-0.43 -0.57 m
0.57 0.43 l
0.43 0.57 l
-0.57 -0.43 l
h
</path>
<path fill="sym-stroke">
-0.43 0.57 m
0.57 -0.43 l
0.43 -0.57 l
-0.57 0.43 l
h
</path>
</group>
</symbol>
<symbol name="arrow/fnormal(spx)">
<path stroke="sym-stroke" fill="white" pen="sym-pen">
0 0 m
-1 0.333 l
-1 -0.333 l
h
</path>
</symbol>
<symbol name="arrow/pointed(spx)">
<path stroke="sym-stroke" fill="sym-stroke" pen="sym-pen">
0 0 m
-1 0.333 l
-0.8 0 l
-1 -0.333 l
h
</path>
</symbol>
<symbol name="arrow/fpointed(spx)">
<path stroke="sym-stroke" fill="white" pen="sym-pen">
0 0 m
-1 0.333 l
-0.8 0 l
-1 -0.333 l
h
</path>
</symbol>
<symbol name="arrow/linear(spx)">
<path stroke="sym-stroke" pen="sym-pen">
-1 0.333 m
0 0 l
-1 -0.333 l
</path>
</symbol>
<symbol name="arrow/fdouble(spx)">
<path stroke="sym-stroke" fill="white" pen="sym-pen">
0 0 m
-1 0.333 l
-1 -0.333 l
h
-1 0 m
-2 0.333 l
-2 -0.333 l
h
</path>
</symbol>
<symbol name="arrow/double(spx)">
<path stroke="sym-stroke" fill="sym-stroke" pen="sym-pen">
0 0 m
-1 0.333 l
-1 -0.333 l
h
-1 0 m
-2 0.333 l
-2 -0.333 l
h
</path>
</symbol>
<pen name="normal" value="1.2"/>
<pen name="heavier" value="2.4"/>
<pen name="fat" value="3.6"/>
<pen name="ultrafat" value="6"/>
<symbolsize name="normal" value="9"/>
<symbolsize name="large" value="15"/>
<symbolsize name="small" value="6"/>
<symbolsize name="tiny" value="3.3"/>
<arrowsize name="normal" value="15"/>
<arrowsize name="large" value="20"/>
<arrowsize name="small" value="10"/>
<arrowsize name="tiny" value="6"/>
<color name="red" value="1 0 0"/>
<color name="green" value="0 1 0"/>
<color name="blue" value="0 0 1"/>
<color name="yellow" value="1 1 0"/>
<color name="orange" value="1 0.647 0"/>
<color name="gold" value="1 0.843 0"/>
<color name="purple" value="0.627 0.125 0.941"/>
<color name="gray" value="0.745"/>
<color name="brown" value="0.647 0.165 0.165"/>
<color name="navy" value="0 0 0.502"/>
<color name="pink" value="1 0.753 0.796"/>
<color name="seagreen" value="0.18 0.545 0.341"/>
<color name="turquoise" value="0.251 0.878 0.816"/>
<color name="violet" value="0.933 0.51 0.933"/>
<color name="darkblue" value="0 0 0.545"/>
<color name="darkcyan" value="0 0.545 0.545"/>
<color name="darkgray" value="0.663"/>
<color name="darkgreen" value="0 0.392 0"/>
<color name="darkmagenta" value="0.545 0 0.545"/>
<color name="darkorange" value="1 0.549 0"/>
<color name="darkred" value="0.545 0 0"/>
<color name="lightblue" value="0.678 0.847 0.902"/>
<color name="lightcyan" value="0.878 1 1"/>
<color name="lightgray" value="0.827"/>
<color name="lightgreen" value="0.565 0.933 0.565"/>
<color name="lightyellow" value="1 1 0.878"/>
<color name="title" value="0.4 0 0.4"/>
<dashstyle name="dashed" value="[4] 0"/>
<dashstyle name="dotted" value="[1 3] 0"/>
<dashstyle name="dash dotted" value="[4 2 1 2] 0"/>
<dashstyle name="dash dot dotted" value="[4 2 1 2 1 2] 0"/>
<textsize name="normal" value="\normalsize"/>
<textsize name="large" value="\large"/>
<textsize name="small" value="\normalsize"/>
<textsize name="huge" value="\LARGE"/>
<textstretch name="normal" value="2.8"/>
<textstretch name="large" value="2.8"/>
<textstretch name="small" value="2.4"/>
<textstretch name="huge" value="2.8"/>
<textstyle name="normal" begin="\begin{flushleft}" end="\end{flushleft}"/>
<textstyle name="center" begin="\begin{center}" end="\end{center}"/>
<textstyle name="itemize" begin="\begin{flushleft}\begin{itemize}" end="\end{itemize}\end{flushleft}"/>
<textstyle name="item" begin="\begin{flushleft}\begin{itemize}\item{}" end="\end{itemize}\end{flushleft}"/>
<gridsize name="16 pts (~6 mm)" value="16"/>
<gridsize name="32 pts (~12 mm)" value="32"/>
<gridsize name="10 pts (~3.5 mm)" value="10"/>
<gridsize name="20 pts (~7 mm)" value="20"/>
<gridsize name="14 pts (~5 mm)" value="14"/>
<gridsize name="28 pts (~10 mm)" value="28"/>
<gridsize name="56 pts (~20 mm)" value="56"/>
<anglesize name="90 deg" value="90"/>
<anglesize name="60 deg" value="60"/>
<anglesize name="45 deg" value="45"/>
<anglesize name="30 deg" value="30"/>
<anglesize name="22.5 deg" value="22.5"/>
<preamble>
\renewcommand\rmdefault{cmss}
\makeatletter
\leftmargini 1.5em
\leftmargin \leftmargini
\leftmarginii  1.2em
\leftmarginiii 1em
\def\@listI{\leftmargin\leftmargini
            \parsep \z@
	    \partopsep 3pt
	    \topsep \z@
            \itemsep \z@}
\@listI
\def\@listii {\leftmargin\leftmarginii
              \labelwidth\leftmarginii
              \advance\labelwidth-\labelsep
              \topsep    \z@
              \parsep    \z@
              \itemsep   \parsep}
\def\@listiii{\leftmargin\leftmarginiii
              \labelwidth\leftmarginiii
              \advance\labelwidth-\labelsep
              \topsep    \z@
              \parsep    \z@
              \partopsep \z@
              \itemsep   \topsep}
\makeatother
</preamble>
<layout paper="800 600" origin="32 0" frame="736 528" skip="32" crop="no"/>
<titlestyle pos="368 554" size="large" color="title"  halign="center" valign="baseline"/>
<tiling name="falling" angle="-60" step="12" width="3"/>
<tiling name="rising" angle="30" step="12" width="3"/>
</ipestyle>
<ipestyle name="kaisttheme">
<symbol name="Background">
<group>
<image matrix="1 0 0 1 -162.234 308.933" rect="339.004 239.003 396.996 288.997" bitmap="2"/>
<group matrix="0.343668 0 0 0.343668 -51.9093 459.634">
<path fill="0.563 0.727 0.855" fillrule="wind">
76.697 277.771 m
120.493 269.94
192.854 264.827
274.709 264.827 c
356.564 264.827
428.927 269.94
472.718 277.771 c
428.927 285.601
356.564 290.72
274.709 290.72 c
192.854 290.72
120.493 285.601
76.697 277.771 c
</path>
<path fill="0.065 0.155 0.563" fillrule="wind">
275.279 299.355 m
294.577 299.355 l
294.577 373.497 l
275.279 373.497 l
275.279 299.355 l
h
</path>
<path fill="0.065 0.155 0.563" fillrule="wind">
418.065 373.465 m
361.604 373.465 l
361.669 357.398 l
380.069 357.398 l
380.069 299.214 l
399.603 299.279 l
399.603 357.398 l
418.065 357.398 l
418.065 373.465 l
h
</path>
<path fill="0.065 0.155 0.563" fillrule="wind">
249.098 374.512 m
241.957 374.512 l
229.799 374.512 l
222.663 374.512 l
200.923 313.64 l
182.964 337.545 l
209.964 373.497 l
190.668 373.497 l
169.085 344.764 l
169.085 373.497 l
149.792 373.497 l
149.792 299.355 l
169.085 299.355 l
169.085 330.332 l
192.384 299.326 l
195.813 299.326 l
211.677 299.326 l
215.107 299.326 l
235.337 355.983 l
247.498 315.289 l
229.329 315.289 l
229.329 299.226 l
259.475 299.226 l
259.475 299.326 l
271.567 299.326 l
249.098 374.512 l
h
</path>
<path fill="0.065 0.155 0.563" fillrule="wind">
341.955 345.908 m
341.927 345.95 l
319.143 345.95 l
319.143 357.493 l
357.066 357.493 l
357.066 373.56 l
323.335 373.56 l
323.318 373.532 l
311.282 373.532
301.522 363.769
301.522 351.728 c
301.522 339.879
310.971 330.261
322.742 329.946 c
322.76 329.887 l
347.43 329.887 l
347.43 315.289 l
303.776 315.289 l
303.776 299.226 l
342.373 299.226 l
342.399 299.261 l
354.979 299.635
365.065 309.921
365.065 322.573 c
365.065 335.392
354.739 345.781
341.955 345.908 c
</path>
</group>
<text transformations="translations" pos="100 588" stroke="kaist-dark-blue" type="label" valign="top">
CS101</text>
<path stroke="kaist-dark-blue" pen="fat">
0 536 m
736 536 l
</path>
</group>
</symbol>
<color name="kaist-dark-blue" value="0.065 0.155 0.563"/>
<color name="dred" value="0.7 0 0"/>
<layout paper="800 600" origin="32 0" frame="736 528" skip="32" crop="no"/>
<titlestyle pos="736 554" size="large" color="title"  halign="right" valign="baseline"/>
</ipestyle>
<ipestyle name="cs101style">
<preamble>
\newcommand{\dred}[1]{\textcolor{dred}{#1}}
\usepackage{fancyvrb}
\DefineShortVerb[formatcom=\color{darkred}]{\|}
\CustomVerbatimEnvironment{V}{Verbatim}{formatcom=\color{black},commandchars=\\\@\$}
\def\r{$\rightarrow$}
</preamble>
</ipestyle>
<page title="Files" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<layer name="delta"/>
<layer name="epsilon"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="alpha beta epsilon" active="epsilon"/>
<view layers="alpha beta gamma epsilon" active="gamma"/>
<view layers="alpha beta gamma delta epsilon" active="delta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">We have a file |&quot;C:/CS101/planets.txt&quot;| on our hard disk, with this contents:

\begin{V}
Mercury
Venus
Earth
Mars
Jupiter
Saturn
Uranus
Neptune
\end{V}
</text>
<text layer="beta" matrix="1 0 0 1 -192 -306.105" transformations="translations" pos="192 448" stroke="darkblue" type="minipage" width="544" valign="top">\begin{V}
&gt;&gt;&gt; f = open(&quot;C:/CS101/planets.txt&quot;, &quot;r&quot;)
&gt;&gt;&gt; s = f.readline()
&gt;&gt;&gt; s, len(s)
(&apos;Mercury\char92n&apos;, 8)
\end{V}
</text>
<text layer="gamma" transformations="translations" pos="479.87 176.036" stroke="darkred" type="label" valign="baseline">mode: |&quot;r&quot;| for reading</text>
<path stroke="darkred" arrow="normal/normal">
563.185 163.942 m
563.185 144.457 l
</path>
<text layer="delta" matrix="1 0 0 1 32.9227 -20.8287" transformations="translations" pos="405.29 52.4076" stroke="darkred" type="label" valign="baseline">line separator in file</text>
<path stroke="darkred" arrow="normal/normal">
424.103 40.9854 m
338.101 37.626
272.927 67.1892
229.926 89.3617
180.206 43.0011 s
</path>
<text layer="epsilon" transformations="translations" pos="256 368" stroke="darkblue" type="minipage" width="400" valign="top">|f| is a \dred{file object} (of type |&lt;type &apos;file&apos;&gt;|), not the contents of the file.</text>
<path stroke="darkred" arrow="normal/normal">
277.63 273.46 m
223.207 194.177
129.142 186.786
78.0784 146.473 s
</path>
</page>
<page title="Reading strings from a file" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<layer name="delta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="alpha beta gamma" active="gamma"/>
<view layers="alpha beta gamma delta" active="delta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">We typically use |strip()| or at least |rstrip()| for the lines we read from a file to get read of white space.</text>
<text layer="beta" pin="h" transformations="translations" pos="0 437.729" stroke="darkblue" type="minipage" width="736" valign="top">\begin{V}
&gt;&gt;&gt; for l in f:
...   s = l.strip()
...   print s,

Venus Earth Mars Jupiter Saturn Uranus Neptune
\end{V}
</text>
<text layer="gamma" pin="h" transformations="translations" pos="0 240.216" stroke="darkblue" type="minipage" width="736" valign="top">|for|-loop with a file object calls |readline()| automatically for each element, and stops after reading the last line.</text>
<text layer="delta" pin="h" transformations="translations" pos="0 149.945" stroke="darkblue" type="minipage" width="736" valign="top">Call |f.close()| when finished with the file object.</text>
</page>
<page title="Reading a file">
<layer name="alpha"/>
<layer name="beta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">A typical program for reading the contents of an entire file and storing it in a list:

\begin{V}
planets = []

f = open(&quot;C:/CS101/planets.txt&quot;, &quot;r&quot;)
for line in f:
  planets.append(line.strip())
f.close()  

print planets
\end{V}
</text>
<text layer="beta" pin="h" transformations="translations" pos="0 152.42" stroke="darkblue" type="minipage" width="736" valign="top">In fact file objects provide a method to do this (but then you get all the white space):

\begin{V}
planets = f.readlines()
\end{V}
</text>
</page>
<page title="Finding earth" section="">
<layer name="alpha"/>
<layer name="beta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">We want to find the line in the file containing earth:

\begin{V}
f = open(&quot;C:/CS101/planets.txt&quot;, &quot;r&quot;)
current = 0
earth = 0
for line in f:
  current += 1
  planet = line.strip().lower()
  if planet == &quot;earth&quot;:
    earth = current

print &quot;Earth is planet #%d&quot; % earth
\end{V}
</text>
<text layer="beta" pin="h" transformations="translations" pos="0 118.946" stroke="darkblue" type="minipage" width="736" valign="top">The program reads the entire file, even if earth is right at the beginning.  After having found earth, there is no need to continue the loop.</text>
</page>
<page title="Finding earth faster" section="">
<layer name="alpha"/>
<layer name="beta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">The keyword |break| terminates the current loop:

\begin{V}
f = open(&quot;C:/CS101/planets.txt&quot;, &quot;r&quot;)
earth = 0
for line in f:
  earth += 1
  planet = line.strip().lower()
  if planet == &quot;earth&quot;:
    \dred@break$

print &quot;Earth is planet #%d&quot; % earth
\end{V}</text>
<text layer="beta" matrix="1 0 0 1 0 8.7346" pin="h" transformations="translations" pos="0 152.42" stroke="darkblue" type="minipage" width="736" valign="top">|break| breaks out of the innermost loop only:
\begin{V}
&gt;&gt;&gt; for x in range(10):
...   for y in range(10):
...     print y,
...     if y == 5: break
\end{V}</text>
</page>
<page title="Commented planets" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="alpha beta gamma" active="gamma"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">Some data files contain useful comments, let&apos;s say starting with a |#| sign.</text>
<text layer="beta" matrix="1 0 0 1 0 10.4143" pin="h" transformations="translations" pos="0 437.729" stroke="darkblue" type="minipage" width="736" valign="top">\begin{V}
f = open(&quot;C:/CS101/planetsc.txt&quot;, &quot;r&quot;)
earth = 0
for line in f:
  planet = line.strip().lower()
  if planet[0] == &quot;#&quot;:
    \dred@continue$
  earth += 1
  if planet == &quot;earth&quot;:
    break

print &quot;Earth is planet #%d&quot; % earth
\end{V}
</text>
<text layer="gamma" matrix="1 0 0 1 0 20.8287" pin="h" transformations="translations" pos="0 37.0448" stroke="darkblue" type="minipage" width="736" valign="top">|continue| makes the loop move to the next element immediately</text>
<path stroke="darkorange" arrow="normal/normal">
207.754 267.413 m
333.398 266.741
466.432 266.741
532.278 268.757
559.153 285.554
560.497 331.243
557.81 364.838
506.746 381.635
428.134 397.76
319.288 399.776
289.053 395.073
289.725 362.822
289.725 352.072 s
</path>
</page>
<page title="A long file" section="">
<layer name="alpha"/>
<layer name="beta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">Let&apos;s do some word games.  We use a file |words.txt| with 113809 English words (http://icon.shef.ac.uk/Moby/).</text>
<text layer="beta" pin="h" transformations="translations" pos="0 436.181" stroke="darkblue" type="minipage" width="736" valign="top">Let&apos;s print all English words longer than 18 letters:

\begin{V}
f = open(&quot;C:/CS101/words.txt&quot;, &quot;r&quot;)

for line in f:
  word = line.strip()
  if len(word) &gt; 18:
    print word

f.close()
\end{V}
</text>
</page>
<page title="Word games" section="">
<layer name="alpha"/>
<view layers="alpha" active="alpha"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">Count all the words without the letter &apos;e&apos;:

\begin{V}
f = open(&quot;C:/CS101/words.txt&quot;, &quot;r&quot;)

count = 0
for line in f:
  word = line.strip()
  if not &quot;e&quot; in word:
    count += 1

print &quot;%d words have no &apos;e&apos;&quot; % count
f.close()
\end{V}
</text>
</page>
<page title="Abecedarian words" section="">
<layer name="alpha"/>
<view layers="alpha" active="alpha"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">Let&apos;s find all words whose letters are sorted:

\begin{V}
def is_abecedarian(word):
  for i in range(1,len(word)):
    if word[i-1] &gt; word[i]:
      return False
  return True

f = open(&quot;C:/CS101/words.txt&quot;, &quot;r&quot;)

for line in f:
  word = line.strip()
  if is_abecedarian(word):
    print word

f.close()
\end{V}
</text>
</page>
<page title="Three double letters in a row?" section="">
<layer name="alpha"/>
<layer name="beta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">Is there a word that has three double letters in a row? Committee and Mississippi are close\ldots</text>
<text layer="beta" pin="h" transformations="translations" pos="0 437.729" stroke="darkblue" type="minipage" width="736" valign="top">\begin{V}
def three_doubles(word):
  s = &quot;&quot;
  for i in range(1,len(word)):
    if word[i-1] == word[i]:
      s = s + &quot;*&quot;
    else:
      s = s + &quot; &quot;
  return &quot;* * *&quot; in s
\end{V}
</text>
</page>
<page title="Writing files" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<layer name="delta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="alpha beta gamma" active="gamma"/>
<view layers="alpha beta gamma delta" active="delta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">We can also create and write to files:

\begin{V}
f = open(&quot;C:/CS101/test.txt&quot;, &quot;w&quot;)
f.write(&quot;CS101 is fantastic\char92n&quot;)
f.close()
\end{V}
</text>
<text layer="beta" pin="h" transformations="translations" pos="0 357.142" stroke="darkblue" type="minipage" width="736" valign="top">Use mode |&quot;w&quot;| to open a file for writing.</text>
<text layer="gamma" pin="h" transformations="translations" pos="0 300.346" stroke="darkblue" type="minipage" width="736" valign="top">The file object has a method |write(text)| to write to the file. Unlike |print|, this does not start a new line after the |text|, not even a single space.  Use |\n| to include a line break.</text>
<text layer="delta" pin="h" transformations="translations" pos="0 176.601" stroke="darkblue" type="minipage" width="736" valign="top">Do not forget to |close()| the file---otherwise, the file contents may be incomplete.</text>
</page>
<page title="Financial data" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<layer name="delta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="alpha beta gamma" active="gamma"/>
<view layers="alpha beta gamma delta" active="delta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">Let&apos;s exercise with a currency exchange rate data set.  We use files |1994.txt| \ldots |2009.txt| with the KRW-USD exchange rate for every day. (www.oanda.com)

\begin{V}
2009/05/11          0.00080110
\end{V}</text>
<text layer="beta" pin="h" transformations="translations" pos="0 357.142" stroke="darkblue" type="minipage" width="736" valign="top">We first read the entire data set (16 files) into a long list of pairs:

\begin{V}
[... (20091227, 1154), (20091228, 1154), 
(20091229, 1167), (20091230, 1167), 
(20091231, 1163)]
\end{V}
</text>
<text layer="gamma" pin="h" transformations="translations" pos="0 149.711" stroke="darkblue" type="minipage" width="736" valign="top">Let&apos;s find the maximum, minimum, and average for each year.</text>
<text layer="delta" pin="h" transformations="translations" pos="0 92.9142" stroke="black" type="minipage" width="736" valign="top">\begin{V}
Minimum: (19950705, 755)
Maximum: (19971223, 1960)
\end{V}
</text>
</page>
<page title="Financial data">
<layer name="alpha"/>
<view layers="alpha" active="alpha"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">Minimum and maximum for every month of a year:

\begin{V}
def find_minmax(yr):
  minmax = [ (9999, 0) ] * 12
  data = read_year(yr)
  for d, v in data:
    # make month 0 .. 11
    month = (d / 100) % 100 - 1  
    minr, maxr = minmax[month]
    if v &lt; minr:
      minr = v
    if v &gt; maxr:
      maxr = v
    minmax[month] = minr, maxr
  return minmax
\end{V}</text>
</page>
<page title="Plot the data" section="">
<layer name="alpha"/>
<view layers="alpha" active="alpha"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">Let&apos;s use |cs1media| to create a nice plot of the exchange rate.</text>
<image matrix="0.902163 0 0 0.902163 36.0041 1.98418" rect="8.04499 20.2805 727.955 507.72" bitmap="1"/>
</page>
<page title="Case study: maintaining stock" section="">
<layer name="alpha"/>
<layer name="beta"/>
<layer name="gamma"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<view layers="alpha beta gamma" active="gamma"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">Let&apos;s write software for a vegetable and fruit shop.   We keep a file with the current stock and prices.  We should be able to sell items, list the current stock, and report all sales done during the day.</text>
<text layer="beta" matrix="1 0 0 1 0 9.8338" pin="h" transformations="translations" pos="0 370.781" stroke="darkblue" type="minipage" width="736" valign="top">File format |stock.txt|:

\begin{V}
190,apple,900
30,orange,1300
\end{V}</text>
<text layer="gamma" matrix="1 0 0 1 0 46.9444" pin="h" transformations="translations" pos="0 202.248" stroke="darkblue" type="minipage" width="736" valign="top">Main menu:

\begin{V}
What would you like to do:
 S) Sell item
 P) Print stock
 R) Report sales
 E) Exit
Enter your choice&gt; 
\end{V}
</text>
</page>
<page title="Testing" section="">
<layer name="alpha"/>
<layer name="beta"/>
<view layers="alpha" active="alpha"/>
<view layers="alpha beta" active="beta"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">If possible, we test each function after writing it.  In the Wing IDE, pressing \dred{Run} executes your current file.  You can then use the functions inside the file from the Python shell. (From the command line, use |python -i script.py|)</text>
<text layer="beta" pin="h" transformations="translations" pos="0 369.23" stroke="darkblue" type="minipage" width="736" valign="top">Testing |load_stock(&quot;stock.txt&quot;)|:

\begin{V}
&gt;&gt;&gt; load_stock(&quot;stock.txt&quot;)
[(190, &apos;apple&apos;, 900), (30, &apos;orange&apos;, 1300), 
(13, &apos;pineapple&apos;, 5500), (60, &apos;carrot&apos;, 600), 
(30, &apos;cucumber&apos;, 900), (20, &apos;egg plant&apos;, 1100), 
(10, &apos;zuccini&apos;, 1300), (70, &apos;garlic&apos;, 300)]
\end{V}
</text>
</page>
<page title="Top-down / bottom-up" section="">
<layer name="alpha"/>
<view layers="alpha" active="alpha"/>
<text layer="alpha" pin="h" transformations="translations" pos="0 528" stroke="darkblue" type="minipage" width="736" valign="top">We can test code before having written all the functions called:

\begin{V}
def main():
  stock = \dred@load_stock$(stock_file_name)
  sales = []
  while True:
    s = \dred@show_menu$()
    if s == &apos;e&apos;:
      break
    elif s == &apos;s&apos;:
      sell(stock, sales)
    elif s == &apos;p&apos;:
      print_stock(stock)
    elif s == &apos;r&apos;:
      print_sales(sales)
\end{V}</text>
<text matrix="1 0 0 1 -53.9326 12.8411" transformations="translations" pos="455.961 359.069" stroke="darkred" type="label" valign="baseline">need these functions to test
</text>
<path stroke="darkred" arrow="normal/normal">
389.188 377.047 m
310.857 384.751
258.209 423.274 s
</path>
<path stroke="darkred" arrow="normal/normal">
387.904 377.047 m
337.823 343.66
287.743 339.807 s
</path>
<text matrix="1 0 0 1 -79.6148 -69.3419" transformations="translations" pos="503.474 203.692" stroke="darkred" type="label" valign="baseline">needed only when selected</text>
<path stroke="darkred" arrow="normal/normal">
427.711 163.884 m
418.722 202.408
362.222 204.976 s
</path>
<path stroke="darkred" arrow="normal/normal">
427.711 118.941 m
423.859 62.4398
368.642 70.1445 s
</path>
<path stroke="darkred" arrow="normal/normal">
405.881 140.77 m
360.937 136.918 l
</path>
</page>
</ipe>
